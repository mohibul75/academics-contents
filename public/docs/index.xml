<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Docs on Distributed Systems Lab</title>
    <link>http://localhost:1313/docs/</link>
    <description>Recent content in Docs on Distributed Systems Lab</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <atom:link href="http://localhost:1313/docs/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Details</title>
      <link>http://localhost:1313/docs/details/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/docs/details/</guid>
      <description>&lt;h1 id=&#34;-distributed-systems-lab--detailed-breakdown&#34;&gt;&#xA;  üìö Distributed Systems Lab ‚Äî Detailed Breakdown&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#-distributed-systems-lab--detailed-breakdown&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;p&gt;This lab is structured as a step-by-step journey through the lifecycle of building a distributed system with microservices.&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;-phase-1-monolithic-smart-library-system&#34;&gt;&#xA;  üöÄ Phase 1: Monolithic Smart Library System&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#-phase-1-monolithic-smart-library-system&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;We begin with a &lt;strong&gt;monolithic design&lt;/strong&gt;, where all components of the system reside in a single codebase.&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;You‚Äôll Learn:&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;How to structure a monolithic application&lt;/li&gt;&#xA;&lt;li&gt;Why monoliths become difficult to scale and maintain&lt;/li&gt;&#xA;&lt;li&gt;Building core modules: Users, Catalog, Borrowing&lt;/li&gt;&#xA;&lt;li&gt;Separation of concerns: Controller ‚Üí Service ‚Üí Repository layers&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;-phase-2-transition-to-microservices&#34;&gt;&#xA;  üß© Phase 2: Transition to Microservices&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#-phase-2-transition-to-microservices&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;Next, we break down the monolith into independently deployable &lt;strong&gt;microservices&lt;/strong&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Prerequisites</title>
      <link>http://localhost:1313/docs/prerequisites/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/docs/prerequisites/</guid>
      <description>&lt;h1 id=&#34;-prerequisites&#34;&gt;&#xA;  üìã Prerequisites&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#-prerequisites&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;p&gt;Before diving into the Smart Library System project, it‚Äôs important to ensure that students or participants have the foundational knowledge and hands-on exposure to the following areas:&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;-1-basic-understanding-of-web-application--development&#34;&gt;&#xA;  üåê 1. Basic Understanding of Web Application &amp;amp; Development&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#-1-basic-understanding-of-web-application--development&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Understand the &lt;strong&gt;client-server model&lt;/strong&gt;.&lt;/li&gt;&#xA;&lt;li&gt;Familiarity with how a web application works (browser ‚Üí server ‚Üí database).&lt;/li&gt;&#xA;&lt;li&gt;Concept of &lt;strong&gt;HTTP verbs&lt;/strong&gt;: &lt;code&gt;GET&lt;/code&gt;, &lt;code&gt;POST&lt;/code&gt;, &lt;code&gt;PUT&lt;/code&gt;, &lt;code&gt;DELETE&lt;/code&gt;, etc.&lt;/li&gt;&#xA;&lt;li&gt;Awareness of &lt;strong&gt;RESTful API principles&lt;/strong&gt;:&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Resource-oriented endpoints&lt;/li&gt;&#xA;&lt;li&gt;Stateless communication&lt;/li&gt;&#xA;&lt;li&gt;Uniform interface&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;-2-api-development-in-any-language&#34;&gt;&#xA;  üîß 2. API Development in Any Language&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#-2-api-development-in-any-language&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;Participants should have prior experience with creating APIs in &lt;strong&gt;any programming language&lt;/strong&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Tools</title>
      <link>http://localhost:1313/docs/tools/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/docs/tools/</guid>
      <description>&lt;h1 id=&#34;-tools--technology-stack&#34;&gt;&#xA;  üõ†Ô∏è Tools &amp;amp; Technology Stack&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#-tools--technology-stack&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;p&gt;This section outlines the recommended tools, frameworks, and platforms used in building and testing the &lt;strong&gt;Smart Library System (Microservices Architecture)&lt;/strong&gt;.&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;-language--framework-preferences&#34;&gt;&#xA;  üöÄ Language &amp;amp; Framework Preferences&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#-language--framework-preferences&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;Choose any language or framework from below, depending on your expertise or lab instruction:&lt;/p&gt;&#xA;&lt;h3 id=&#34;-python&#34;&gt;&#xA;  üêç Python&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#-python&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;Framework&lt;/th&gt;&#xA;          &lt;th&gt;Description&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;FastAPI&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;High-performance, modern API framework using ASGI. Ideal for microservices.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;Flask&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;Lightweight WSGI framework. Easy to use, good for learning microservice patterns.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;Django&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;Full-featured web framework. Use with Django REST Framework for API-based microservices.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;h3 id=&#34;-nodejs&#34;&gt;&#xA;  üåê Node.js&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#-nodejs&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;Framework&lt;/th&gt;&#xA;          &lt;th&gt;Description&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;Express.js&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;Minimal and flexible framework for building REST APIs. Fast and widely used.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;h3 id=&#34;-java&#34;&gt;&#xA;  ‚òï Java&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#-java&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;Framework&lt;/th&gt;&#xA;          &lt;th&gt;Description&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;Spring Boot&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;Production-grade microservice framework with robust dependency injection and JPA support.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;h3 id=&#34;-c&#34;&gt;&#xA;  üß± C#&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#-c&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;Framework&lt;/th&gt;&#xA;          &lt;th&gt;Description&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;.NET Core / ASP.NET Core&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;Cross-platform microservice-ready framework by Microsoft. Supports REST APIs out-of-the-box.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;-api-testing-tools&#34;&gt;&#xA;  üåê API Testing Tools&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#-api-testing-tools&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;Tool&lt;/th&gt;&#xA;          &lt;th&gt;Purpose&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;Postman&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;Powerful GUI for testing REST APIs.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;Bruno&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;Open-source and developer-friendly API testing alternative to Postman.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;-preferred-operating-system&#34;&gt;&#xA;  üêß Preferred Operating System&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#-preferred-operating-system&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;OS Version&lt;/th&gt;&#xA;          &lt;th&gt;Description&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;Ubuntu 22.04 LTS&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;Long-Term Support, stable and widely used in cloud environments.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;Ubuntu 24.04 LTS&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;(Upcoming/Recent) Updated LTS version with latest packages.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;-preferred-databases&#34;&gt;&#xA;  üóÉÔ∏è Preferred Databases&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#-preferred-databases&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;Choose your preferred RDBMS per service ‚Äî all options are supported:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Phase 1</title>
      <link>http://localhost:1313/docs/phase-1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/docs/phase-1/</guid>
      <description>&lt;h1 id=&#34;-smart-library-system--monolithic-architecture&#34;&gt;&#xA;  üìò Smart Library System ‚Äì Monolithic Architecture&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#-smart-library-system--monolithic-architecture&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;h2 id=&#34;overview&#34;&gt;&#xA;  Overview&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#overview&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;The &lt;strong&gt;Smart Library System (Monolithic Version)&lt;/strong&gt; is a single, unified application that handles all core functionalities: managing users, books, and book loans. This system is ideal for simple deployments where all components are tightly coupled, sharing the same runtime and database.&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;-functional-modules&#34;&gt;&#xA;  üß© Functional Modules&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#-functional-modules&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;1-user-management-module&#34;&gt;&#xA;  1. &lt;strong&gt;User Management Module&lt;/strong&gt;&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#1-user-management-module&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Register a user (students/faculty).&lt;/li&gt;&#xA;&lt;li&gt;Update user profile.&lt;/li&gt;&#xA;&lt;li&gt;Retrieve user info.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;2-book-management-module&#34;&gt;&#xA;  2. &lt;strong&gt;Book Management Module&lt;/strong&gt;&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#2-book-management-module&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Add/update/remove books.&lt;/li&gt;&#xA;&lt;li&gt;View book availability.&lt;/li&gt;&#xA;&lt;li&gt;Search books by title, author, or genre.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;3-loan-management-module&#34;&gt;&#xA;  3. &lt;strong&gt;Loan Management Module&lt;/strong&gt;&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#3-loan-management-module&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Issue books to users.&lt;/li&gt;&#xA;&lt;li&gt;Return books.&lt;/li&gt;&#xA;&lt;li&gt;View active/past loans.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;-unified-database-schema&#34;&gt;&#xA;  üõ¢Ô∏è Unified Database Schema&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#-unified-database-schema&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;Table&lt;/th&gt;&#xA;          &lt;th&gt;Description&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;users&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;Stores user information.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;books&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;Stores book catalog details.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;loans&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;Tracks issued/returned books.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;p&gt;All modules interact with this &lt;strong&gt;shared relational database&lt;/strong&gt;, typically PostgreSQL or MySQL.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Phase 2</title>
      <link>http://localhost:1313/docs/phase-2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/docs/phase-2/</guid>
      <description>&lt;h1 id=&#34;-smart-library-system--microservices-architecture&#34;&gt;&#xA;  üß© Smart Library System ‚Äì Microservices Architecture&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#-smart-library-system--microservices-architecture&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;h2 id=&#34;overview&#34;&gt;&#xA;  Overview&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#overview&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;In the &lt;strong&gt;microservices version&lt;/strong&gt; of the Smart Library System, the application is divided into three independent services ‚Äî each responsible for a specific domain: &lt;strong&gt;User&lt;/strong&gt;, &lt;strong&gt;Book&lt;/strong&gt;, and &lt;strong&gt;Loan&lt;/strong&gt;. Every service has its &lt;strong&gt;own database&lt;/strong&gt; and communicates with others via &lt;strong&gt;HTTP APIs&lt;/strong&gt; (no queues or Kafka involved in this version).&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;-services-overview&#34;&gt;&#xA;  üß± Services Overview&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#-services-overview&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;1-user-service&#34;&gt;&#xA;  1. &lt;strong&gt;User Service&lt;/strong&gt;&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#1-user-service&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;p&gt;Handles registration, profile management, and user-related queries.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
