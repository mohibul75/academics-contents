<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Docs on Distributed Systems Lab</title>
    <link>http://localhost:1313/docs/</link>
    <description>Recent content in Docs on Distributed Systems Lab</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <atom:link href="http://localhost:1313/docs/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Details</title>
      <link>http://localhost:1313/docs/details/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/docs/details/</guid>
      <description>&lt;h1 id=&#34;-distributed-systems-lab--detailed-breakdown&#34;&gt;&#xA;  üìö Distributed Systems Lab ‚Äî Detailed Breakdown&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#-distributed-systems-lab--detailed-breakdown&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;p&gt;This lab is structured as a step-by-step journey through the lifecycle of building a distributed system with microservices.&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;-reference-project&#34;&gt;&#xA;  üìÇ Reference Project&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#-reference-project&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;You will find a reference project for this lab in the following repository: &lt;a href=&#34;https://github.com/mohibul75/reference-project-for-distributed-systems-lab&#34;&gt;Distributed Systems Project&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;-phase-1-monolithic-smart-library-system&#34;&gt;&#xA;  üöÄ Phase 1: Monolithic Smart Library System&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#-phase-1-monolithic-smart-library-system&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;We begin with a &lt;strong&gt;monolithic design&lt;/strong&gt;, where all components of the system reside in a single codebase.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Course Timeline</title>
      <link>http://localhost:1313/docs/timeline/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/docs/timeline/</guid>
      <description>&lt;h1 id=&#34;-course-timeline--milestones&#34;&gt;&#xA;  üìÖ Course Timeline &amp;amp; Milestones&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#-course-timeline--milestones&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;p&gt;This timeline provides a week-by-week breakdown of the course, showing lecture topics and corresponding assignments. The course is designed to progressively build your distributed systems skills from fundamentals to advanced orchestration.&lt;/p&gt;&#xA;&lt;h2 id=&#34;-weekly-schedule&#34;&gt;&#xA;  üóìÔ∏è Weekly Schedule&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#-weekly-schedule&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th style=&#34;text-align: center&#34;&gt;&lt;strong&gt;Week&lt;/strong&gt;&lt;/th&gt;&#xA;          &lt;th&gt;&lt;strong&gt;Lecture Topics&lt;/strong&gt;&lt;/th&gt;&#xA;          &lt;th&gt;&lt;strong&gt;Lab Assignment&lt;/strong&gt;&lt;/th&gt;&#xA;          &lt;th&gt;&lt;strong&gt;Deliverables&lt;/strong&gt;&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;&lt;strong&gt;1&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;Microservices Fundamentals&lt;/strong&gt; &lt;!-- raw HTML omitted --&gt;‚Ä¢ Introduction to distributed systems&lt;!-- raw HTML omitted --&gt;‚Ä¢ Monolithic vs microservices architecture&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;Phase 1:&lt;/strong&gt; &lt;!-- raw HTML omitted --&gt;Monolithic Smart Library System&lt;/td&gt;&#xA;          &lt;td&gt;Working monolithic application&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;&lt;strong&gt;2-3&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;Transition to Microservices&lt;/strong&gt; &lt;!-- raw HTML omitted --&gt;‚Ä¢ Service decomposition strategies&lt;!-- raw HTML omitted --&gt;‚Ä¢ Inter-service communication&lt;!-- raw HTML omitted --&gt;‚Ä¢ Phase 1 evaluation &amp;amp; feedback&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;Phase 2:&lt;/strong&gt; &lt;!-- raw HTML omitted --&gt;Microservices Implementation&lt;/td&gt;&#xA;          &lt;td&gt;Multiple independent services with API endpoints&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;&lt;strong&gt;4-5&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;API Gateway &amp;amp; Reverse Proxy&lt;/strong&gt; &lt;!-- raw HTML omitted --&gt;‚Ä¢ Nginx configuration &amp;amp; deployment&lt;!-- raw HTML omitted --&gt;‚Ä¢ Load balancing strategies&lt;!-- raw HTML omitted --&gt;‚Ä¢ Phase 2 evaluation &amp;amp; feedback&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;Phase 3:&lt;/strong&gt; &lt;!-- raw HTML omitted --&gt;Nginx Integration&lt;/td&gt;&#xA;          &lt;td&gt;Centralized access point with proper routing&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;&lt;strong&gt;6-7&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;Containerization&lt;/strong&gt; &lt;!-- raw HTML omitted --&gt;‚Ä¢ Docker fundamentals&lt;!-- raw HTML omitted --&gt;‚Ä¢ Container networking&lt;!-- raw HTML omitted --&gt;‚Ä¢ Phase 3 evaluation &amp;amp; feedback&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;Phase 4:&lt;/strong&gt; &lt;!-- raw HTML omitted --&gt;Docker Implementation&lt;/td&gt;&#xA;          &lt;td&gt;Containerized services with proper isolation&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;&lt;strong&gt;8-9&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;Container Orchestration Basics&lt;/strong&gt; &lt;!-- raw HTML omitted --&gt;‚Ä¢ Docker Compose workflows&lt;!-- raw HTML omitted --&gt;‚Ä¢ Multi-container applications&lt;!-- raw HTML omitted --&gt;‚Ä¢ Phase 4 evaluation &amp;amp; feedback&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;Phase 5:&lt;/strong&gt; &lt;!-- raw HTML omitted --&gt;Docker Compose Setup&lt;/td&gt;&#xA;          &lt;td&gt;Multi-container application with defined dependencies&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;&lt;strong&gt;10&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;Advanced Orchestration&lt;/strong&gt; &lt;!-- raw HTML omitted --&gt;‚Ä¢ Docker Swarm architecture&lt;!-- raw HTML omitted --&gt;‚Ä¢ Service scaling &amp;amp; management&lt;!-- raw HTML omitted --&gt;‚Ä¢ Phase 5 evaluation &amp;amp; feedback&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;Group Presentations:&lt;/strong&gt; &lt;!-- raw HTML omitted --&gt;Design &amp;amp; Documentation&lt;/td&gt;&#xA;          &lt;td&gt;Project proposal &amp;amp; architecture diagram&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;&lt;strong&gt;11&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;System Design Principles&lt;/strong&gt; &lt;!-- raw HTML omitted --&gt;‚Ä¢ Scalability patterns&lt;!-- raw HTML omitted --&gt;‚Ä¢ High availability strategies&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;Group Presentations:&lt;/strong&gt; &lt;!-- raw HTML omitted --&gt;Implementation &amp;amp; documentation&lt;/td&gt;&#xA;          &lt;td&gt;Progress report &amp;amp; technical documentation&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;&lt;strong&gt;12-13&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;Group Presentations&lt;/strong&gt; &lt;!-- raw HTML omitted --&gt;‚Ä¢ System design presentations&lt;!-- raw HTML omitted --&gt;‚Ä¢ Industry trendy distributed systems showcase&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;Group Presentations:&lt;/strong&gt; &lt;!-- raw HTML omitted --&gt;Finalization &amp;amp; presentation prep&lt;/td&gt;&#xA;          &lt;td&gt;Final presentation slides &amp;amp; demo&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;&lt;strong&gt;14&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;Course Review &amp;amp; Final Evaluation&lt;/strong&gt; &lt;!-- raw HTML omitted --&gt;‚Ä¢ Best practices review&lt;!-- raw HTML omitted --&gt;‚Ä¢ Industry application discussion&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;Final Assessment&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;Course completion &amp;amp; project evaluation&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;h2 id=&#34;-grading-distribution&#34;&gt;&#xA;  üìä Grading Distribution&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#-grading-distribution&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;Individual Lab Phases (1-5)&lt;/strong&gt;: Each phase will be evaluated based on functionality, code quality, and documentation. Detailed rubric will be published soon.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Group Project &amp;amp; Presentation&lt;/strong&gt;: Assessment will focus on system design principles, technical implementation, and presentation quality. Detailed evaluation criteria will be shared before Week 10.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;-important-notes&#34;&gt;&#xA;  üîç Important Notes&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#-important-notes&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Each phase builds upon the previous one, creating a complete learning journey&lt;/li&gt;&#xA;&lt;li&gt;Evaluations occur regularly to provide feedback and guidance&lt;/li&gt;&#xA;&lt;li&gt;Group work begins in Week 10, allowing sufficient time for comprehensive research and implementation&lt;/li&gt;&#xA;&lt;li&gt;Final presentations should demonstrate both technical mastery and effective communication&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>Prerequisites</title>
      <link>http://localhost:1313/docs/prerequisites/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/docs/prerequisites/</guid>
      <description>&lt;h1 id=&#34;-prerequisites&#34;&gt;&#xA;  üìã Prerequisites&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#-prerequisites&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;p&gt;Before diving into the Smart Library System project, it‚Äôs important to ensure that students or participants have the foundational knowledge and hands-on exposure to the following areas:&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;-1-basic-understanding-of-web-application--development&#34;&gt;&#xA;  üåê 1. Basic Understanding of Web Application &amp;amp; Development&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#-1-basic-understanding-of-web-application--development&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Understand the &lt;strong&gt;client-server model&lt;/strong&gt;.&lt;/li&gt;&#xA;&lt;li&gt;Familiarity with how a web application works (browser ‚Üí server ‚Üí database).&lt;/li&gt;&#xA;&lt;li&gt;Concept of &lt;strong&gt;HTTP verbs&lt;/strong&gt;: &lt;code&gt;GET&lt;/code&gt;, &lt;code&gt;POST&lt;/code&gt;, &lt;code&gt;PUT&lt;/code&gt;, &lt;code&gt;DELETE&lt;/code&gt;, etc.&lt;/li&gt;&#xA;&lt;li&gt;Awareness of &lt;strong&gt;RESTful API principles&lt;/strong&gt;:&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Resource-oriented endpoints&lt;/li&gt;&#xA;&lt;li&gt;Stateless communication&lt;/li&gt;&#xA;&lt;li&gt;Uniform interface&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;-2-api-development-in-any-language&#34;&gt;&#xA;  üîß 2. API Development in Any Language&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#-2-api-development-in-any-language&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;Participants should have prior experience with creating APIs in &lt;strong&gt;any programming language&lt;/strong&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Tools</title>
      <link>http://localhost:1313/docs/tools/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/docs/tools/</guid>
      <description>&lt;h1 id=&#34;-tools--technology-stack&#34;&gt;&#xA;  üõ†Ô∏è Tools &amp;amp; Technology Stack&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#-tools--technology-stack&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;p&gt;This section outlines the recommended tools, frameworks, and platforms used in building and testing the &lt;strong&gt;Smart Library System (Microservices Architecture)&lt;/strong&gt;.&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;-language--framework-preferences&#34;&gt;&#xA;  üöÄ Language &amp;amp; Framework Preferences&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#-language--framework-preferences&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;Choose any language or framework from below, depending on your expertise or lab instruction:&lt;/p&gt;&#xA;&lt;h3 id=&#34;-python&#34;&gt;&#xA;  üêç Python&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#-python&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;Framework&lt;/th&gt;&#xA;          &lt;th&gt;Description&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;FastAPI&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;High-performance, modern API framework using ASGI. Ideal for microservices.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;Flask&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;Lightweight WSGI framework. Easy to use, good for learning microservice patterns.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;Django&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;Full-featured web framework. Use with Django REST Framework for API-based microservices.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;h3 id=&#34;-nodejs&#34;&gt;&#xA;  üåê Node.js&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#-nodejs&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;Framework&lt;/th&gt;&#xA;          &lt;th&gt;Description&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;Express.js&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;Minimal and flexible framework for building REST APIs. Fast and widely used.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;h3 id=&#34;-java&#34;&gt;&#xA;  ‚òï Java&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#-java&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;Framework&lt;/th&gt;&#xA;          &lt;th&gt;Description&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;Spring Boot&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;Production-grade microservice framework with robust dependency injection and JPA support.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;h3 id=&#34;-c&#34;&gt;&#xA;  üß± C#&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#-c&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;Framework&lt;/th&gt;&#xA;          &lt;th&gt;Description&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;.NET Core / ASP.NET Core&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;Cross-platform microservice-ready framework by Microsoft. Supports REST APIs out-of-the-box.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;-api-testing-tools&#34;&gt;&#xA;  üåê API Testing Tools&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#-api-testing-tools&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;Tool&lt;/th&gt;&#xA;          &lt;th&gt;Purpose&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;Postman&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;Powerful GUI for testing REST APIs.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;Bruno&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;Open-source and developer-friendly API testing alternative to Postman.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;-preferred-operating-system&#34;&gt;&#xA;  üêß Preferred Operating System&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#-preferred-operating-system&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;OS Version&lt;/th&gt;&#xA;          &lt;th&gt;Description&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;Ubuntu 22.04 LTS&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;Long-Term Support, stable and widely used in cloud environments.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;Ubuntu 24.04 LTS&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;(Upcoming/Recent) Updated LTS version with latest packages.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;-preferred-databases&#34;&gt;&#xA;  üóÉÔ∏è Preferred Databases&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#-preferred-databases&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;Choose your preferred RDBMS per service ‚Äî all options are supported:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Phase 1</title>
      <link>http://localhost:1313/docs/phase-1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/docs/phase-1/</guid>
      <description>&lt;h1 id=&#34;-smart-library-system--monolithic-architecture&#34;&gt;&#xA;  üìò Smart Library System ‚Äì Monolithic Architecture&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#-smart-library-system--monolithic-architecture&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;h2 id=&#34;overview&#34;&gt;&#xA;  Overview&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#overview&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;The &lt;strong&gt;Smart Library System (Monolithic Version)&lt;/strong&gt; is a single, unified application that handles all core functionalities: managing users, books, and book loans. This system is ideal for simple deployments where all components are tightly coupled, sharing the same runtime and database.&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;-functional-modules&#34;&gt;&#xA;  üß© Functional Modules&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#-functional-modules&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;1-user-management-module&#34;&gt;&#xA;  1. &lt;strong&gt;User Management Module&lt;/strong&gt;&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#1-user-management-module&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Register a user (students/faculty).&lt;/li&gt;&#xA;&lt;li&gt;Update user profile.&lt;/li&gt;&#xA;&lt;li&gt;Retrieve user info.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;2-book-management-module&#34;&gt;&#xA;  2. &lt;strong&gt;Book Management Module&lt;/strong&gt;&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#2-book-management-module&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Add/update/remove books.&lt;/li&gt;&#xA;&lt;li&gt;View book availability.&lt;/li&gt;&#xA;&lt;li&gt;Search books by title, author, or genre.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;3-loan-management-module&#34;&gt;&#xA;  3. &lt;strong&gt;Loan Management Module&lt;/strong&gt;&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#3-loan-management-module&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Issue books to users.&lt;/li&gt;&#xA;&lt;li&gt;Return books.&lt;/li&gt;&#xA;&lt;li&gt;View active/past loans.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;-unified-database-schema&#34;&gt;&#xA;  üõ¢Ô∏è Unified Database Schema&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#-unified-database-schema&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;Table&lt;/th&gt;&#xA;          &lt;th&gt;Description&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;users&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;Stores user information.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;books&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;Stores book catalog details.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;loans&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;Tracks issued/returned books.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;p&gt;All modules interact with this &lt;strong&gt;shared relational database&lt;/strong&gt;, typically PostgreSQL or MySQL.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Phase 2</title>
      <link>http://localhost:1313/docs/phase-2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/docs/phase-2/</guid>
      <description>&lt;h1 id=&#34;-smart-library-system--microservices-architecture&#34;&gt;&#xA;  üß© Smart Library System ‚Äì Microservices Architecture&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#-smart-library-system--microservices-architecture&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;h2 id=&#34;overview&#34;&gt;&#xA;  Overview&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#overview&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;In the &lt;strong&gt;microservices version&lt;/strong&gt; of the Smart Library System, the application is divided into three independent services ‚Äî each responsible for a specific domain: &lt;strong&gt;User&lt;/strong&gt;, &lt;strong&gt;Book&lt;/strong&gt;, and &lt;strong&gt;Loan&lt;/strong&gt;. Every service has its &lt;strong&gt;own database&lt;/strong&gt; and communicates with others via &lt;strong&gt;HTTP APIs&lt;/strong&gt; (no queues or Kafka involved in this version).&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;-services-overview&#34;&gt;&#xA;  üß± Services Overview&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#-services-overview&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;1-user-service&#34;&gt;&#xA;  1. &lt;strong&gt;User Service&lt;/strong&gt;&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#1-user-service&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;p&gt;Handles registration, profile management, and user-related queries.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Phase 3</title>
      <link>http://localhost:1313/docs/phase-3/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/docs/phase-3/</guid>
      <description>&lt;h2 id=&#34;-phase-3-reverse-proxy-with-nginx&#34;&gt;&#xA;  üåê Phase 3: Reverse Proxy with Nginx&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#-phase-3-reverse-proxy-with-nginx&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;This phase introduces &lt;strong&gt;Nginx&lt;/strong&gt; as a &lt;strong&gt;reverse proxy&lt;/strong&gt;, acting as the single entry point to route traffic to backend microservices.&lt;/p&gt;&#xA;&lt;h3 id=&#34;-youll-learn&#34;&gt;&#xA;  üéØ You‚Äôll Learn:&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#-youll-learn&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;What is a reverse proxy and why it&amp;rsquo;s important&lt;/li&gt;&#xA;&lt;li&gt;Routing and load balancing strategies&lt;/li&gt;&#xA;&lt;li&gt;How to serve APIs and static content behind Nginx&lt;/li&gt;&#xA;&lt;li&gt;Configuring HTTPS (SSL termination)&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;-topics-covered&#34;&gt;&#xA;  üõ† Topics Covered:&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#-topics-covered&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Installing and configuring Nginx on Linux&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;nginx.conf&lt;/code&gt; structure and virtual hosts&lt;/li&gt;&#xA;&lt;li&gt;Path-based routing:&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;/api/users ‚Üí User Service  &#xA;/api/books ‚Üí Book Service  &#xA;/api/loans ‚Üí Loan Service  &#xA;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;&#xA;&lt;li&gt;Static file delivery for frontend (optional)&lt;/li&gt;&#xA;&lt;li&gt;Logging requests centrally&lt;/li&gt;&#xA;&lt;li&gt;Handling 404s and upstream errors&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>Phase 4</title>
      <link>http://localhost:1313/docs/phase-4/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/docs/phase-4/</guid>
      <description>&lt;hr&gt;&#xA;&lt;h2 id=&#34;-phase-4-containerization-with-docker&#34;&gt;&#xA;  üê≥ Phase 4: Containerization with Docker&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#-phase-4-containerization-with-docker&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;We encapsulate each microservice into its own &lt;strong&gt;Docker container&lt;/strong&gt; to achieve environment consistency and portability.&lt;/p&gt;&#xA;&lt;h3 id=&#34;-youll-learn&#34;&gt;&#xA;  üéØ You‚Äôll Learn:&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#-youll-learn&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Why containerization is essential in microservice ecosystems&lt;/li&gt;&#xA;&lt;li&gt;How to write Dockerfiles for Python, Node.js, Java, and .NET Core apps&lt;/li&gt;&#xA;&lt;li&gt;How to build and run containers&lt;/li&gt;&#xA;&lt;li&gt;Container networking and volume mounting&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;-topics-covered&#34;&gt;&#xA;  üõ† Topics Covered:&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#-topics-covered&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Writing Dockerfiles for each service&lt;/li&gt;&#xA;&lt;li&gt;Installing dependencies inside containers&lt;/li&gt;&#xA;&lt;li&gt;Exposing ports and configuring environment variables&lt;/li&gt;&#xA;&lt;li&gt;Docker CLI basics: &lt;code&gt;build&lt;/code&gt;, &lt;code&gt;run&lt;/code&gt;, &lt;code&gt;exec&lt;/code&gt;, &lt;code&gt;logs&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;Creating named networks for communication between services&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>Phase 5</title>
      <link>http://localhost:1313/docs/phase-5/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/docs/phase-5/</guid>
      <description>&lt;h2 id=&#34;-phase-5-managing-with-docker-compose&#34;&gt;&#xA;  ‚öôÔ∏è Phase 5: Managing with Docker Compose&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#-phase-5-managing-with-docker-compose&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;With multiple services running, we now use &lt;strong&gt;Docker Compose&lt;/strong&gt; to manage them together through a unified configuration.&lt;/p&gt;&#xA;&lt;h3 id=&#34;-youll-learn&#34;&gt;&#xA;  üéØ You‚Äôll Learn:&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#-youll-learn&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Structuring a &lt;code&gt;docker-compose.yml&lt;/code&gt; file&lt;/li&gt;&#xA;&lt;li&gt;Defining services, networks, and volumes&lt;/li&gt;&#xA;&lt;li&gt;Scaling services for development/testing&lt;/li&gt;&#xA;&lt;li&gt;Making services talk to each other by name&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;-topics-covered&#34;&gt;&#xA;  üõ† Topics Covered:&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#-topics-covered&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Docker Compose syntax and service definitions&lt;/li&gt;&#xA;&lt;li&gt;Declaring DB containers (e.g., Postgres, MySQL)&lt;/li&gt;&#xA;&lt;li&gt;Health checks and restart policies&lt;/li&gt;&#xA;&lt;li&gt;Local development workflows with Compose&lt;/li&gt;&#xA;&lt;li&gt;Mounting source code with &lt;code&gt;volumes:&lt;/code&gt; for live reloading&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>Phase 6</title>
      <link>http://localhost:1313/docs/phase-6/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/docs/phase-6/</guid>
      <description>&lt;hr&gt;&#xA;&lt;h2 id=&#34;-phase-6-orchestration-with-docker-swarm-optional&#34;&gt;&#xA;  üö¢ Phase 6: Orchestration with Docker Swarm (Optional)&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#-phase-6-orchestration-with-docker-swarm-optional&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;Once you‚Äôve mastered local development, we introduce &lt;strong&gt;Docker Swarm&lt;/strong&gt; for distributed service orchestration.&lt;/p&gt;&#xA;&lt;h3 id=&#34;-youll-learn&#34;&gt;&#xA;  üéØ You‚Äôll Learn:&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#-youll-learn&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Running your app on a multi-node Docker cluster&lt;/li&gt;&#xA;&lt;li&gt;Service scaling, rolling updates, and high availability&lt;/li&gt;&#xA;&lt;li&gt;Managing load balancing and service discovery&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;-topics-covered&#34;&gt;&#xA;  üõ† Topics Covered:&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#-topics-covered&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Initializing a Docker Swarm (&lt;code&gt;docker swarm init&lt;/code&gt;)&lt;/li&gt;&#xA;&lt;li&gt;Creating overlay networks&lt;/li&gt;&#xA;&lt;li&gt;Deploying stacks via &lt;code&gt;docker stack deploy&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;Scaling services with replicas&lt;/li&gt;&#xA;&lt;li&gt;Monitoring service health and logs&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;üîÅ &lt;strong&gt;Optional Lab&lt;/strong&gt;: Simulate node failure and observe Swarm&amp;rsquo;s self-healing&lt;/p&gt;</description>
    </item>
    <item>
      <title>Systems Design Problems</title>
      <link>http://localhost:1313/docs/system-design/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/docs/system-design/</guid>
      <description>&lt;h1 id=&#34;-system-design-at-scale&#34;&gt;&#xA;  üèóÔ∏è System Design at Scale&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#-system-design-at-scale&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;h2 id=&#34;overview&#34;&gt;&#xA;  Overview&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#overview&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;In this phase, we&amp;rsquo;ll tackle the challenge of designing systems that can scale from hundreds to millions of users. Students will work in teams to develop comprehensive system architectures that demonstrate an understanding of distributed systems principles in real-world scenarios.&lt;/p&gt;&#xA;&lt;h2 id=&#34;-learning-objectives&#34;&gt;&#xA;  üìã Learning Objectives&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#-learning-objectives&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Apply distributed systems concepts to practical, industry-relevant problems&lt;/li&gt;&#xA;&lt;li&gt;Design scalable architectures that evolve with increasing user demands&lt;/li&gt;&#xA;&lt;li&gt;Identify and resolve bottlenecks in system performance&lt;/li&gt;&#xA;&lt;li&gt;Make informed trade-offs between consistency, availability, and partition tolerance&lt;/li&gt;&#xA;&lt;li&gt;Document and present technical designs effectively&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;-methodology&#34;&gt;&#xA;  üîÑ Methodology&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#-methodology&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;Each team will:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Some Distributed Systems Exploration</title>
      <link>http://localhost:1313/docs/exploration/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/docs/exploration/</guid>
      <description>&lt;h1 id=&#34;-distributed-systems-exploration&#34;&gt;&#xA;  üåç Distributed Systems Exploration&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#-distributed-systems-exploration&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;p&gt;Distributed systems are the backbone of scalable and fault-tolerant applications. In this phase, we explore &lt;strong&gt;6+ distributed technologies&lt;/strong&gt;, understanding &lt;strong&gt;how they work&lt;/strong&gt;, &lt;strong&gt;what problems they solve&lt;/strong&gt;, and &lt;strong&gt;where they fit in microservices&lt;/strong&gt;.&lt;/p&gt;&#xA;&lt;h2 id=&#34;-exploration-methodology&#34;&gt;&#xA;  üîç Exploration Methodology&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#-exploration-methodology&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;For this phase, students will work in collaborative teams to deeply investigate distributed systems technologies. Each team will:&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&lt;strong&gt;Research &amp;amp; Analyze&lt;/strong&gt;: Thoroughly explore an assigned distributed system technology&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Document Findings&lt;/strong&gt;: Create comprehensive technical documentation&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Present Solutions&lt;/strong&gt;: Deliver an engaging presentation to peers and faculty&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;Your exploration should focus on these key aspects:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Career Path</title>
      <link>http://localhost:1313/docs/career-path/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/docs/career-path/</guid>
      <description>&lt;h1 id=&#34;-career-path&#34;&gt;&#xA;  üåê Career Path&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#-career-path&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;h2 id=&#34;-why-distributed-systems-matter-for-your-career&#34;&gt;&#xA;  üöÄ Why Distributed Systems Matter for Your Career&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#-why-distributed-systems-matter-for-your-career&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;The skills you&amp;rsquo;re developing in this Distributed Systems course are foundational to some of the most in-demand and well-compensated roles in the technology industry. As systems continue to scale and organizations embrace cloud-native architectures, professionals who understand distributed systems concepts are increasingly valuable.&lt;/p&gt;&#xA;&lt;h3 id=&#34;-from-academic-concepts-to-industry-roles&#34;&gt;&#xA;  üîç From Academic Concepts to Industry Roles&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#-from-academic-concepts-to-industry-roles&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;p&gt;This course introduces you to concepts and technologies that directly translate to professional roles such as:&lt;/p&gt;</description>
    </item>
    <item>
      <title>About Me</title>
      <link>http://localhost:1313/docs/about-me/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/docs/about-me/</guid>
      <description>&lt;h2 id=&#34;-about-me&#34;&gt;&#xA;  üë®‚Äçüíª About Me&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#-about-me&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;Hello! I‚Äôm &lt;strong&gt;Mohibul Alam&lt;/strong&gt;, a passionate and hands-on &lt;strong&gt;Senior DevOps Engineer&lt;/strong&gt; with a strong background in cloud infrastructure, automation, and modern backend systems. I bring almost 4 years of experience designing and deploying &lt;strong&gt;scalable, secure, and high-performance solutions&lt;/strong&gt; across AWS, Azure, and on-premises environments.&lt;/p&gt;&#xA;&lt;p&gt;My expertise lies in &lt;strong&gt;DevOps automation, container orchestration, observability, and backend development&lt;/strong&gt;, with a growing interest in building intelligent systems powered by &lt;strong&gt;LLMs and AI agents&lt;/strong&gt;.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
