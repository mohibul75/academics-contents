<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Distributed Systems Lab</title>
    <link>http://localhost:1313/</link>
    <description>Recent content on Distributed Systems Lab</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <atom:link href="http://localhost:1313/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Details</title>
      <link>http://localhost:1313/docs/details/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/docs/details/</guid>
      <description>&lt;h1 id=&#34;-distributed-systems-lab--detailed-breakdown&#34;&gt;&#xA;  üìö Distributed Systems Lab ‚Äî Detailed Breakdown&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#-distributed-systems-lab--detailed-breakdown&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;p&gt;This lab is structured as a step-by-step journey through the lifecycle of building a distributed system with microservices.&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;-reference-project&#34;&gt;&#xA;  üìÇ Reference Project&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#-reference-project&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;You will find a reference project for this lab in the following repository: &lt;a href=&#34;https://github.com/mohibul75/reference-project-for-distributed-systems-lab&#34;&gt;Distributed Systems Project&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;-phase-1-monolithic-smart-library-system&#34;&gt;&#xA;  üöÄ Phase 1: Monolithic Smart Library System&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#-phase-1-monolithic-smart-library-system&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;We begin with a &lt;strong&gt;monolithic design&lt;/strong&gt;, where all components of the system reside in a single codebase.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Course Timeline</title>
      <link>http://localhost:1313/docs/timeline/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/docs/timeline/</guid>
      <description>&lt;h1 id=&#34;-course-timeline--milestones&#34;&gt;&#xA;  üìÖ Course Timeline &amp;amp; Milestones&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#-course-timeline--milestones&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;p&gt;This timeline provides a week-by-week breakdown of the course, showing lecture topics and corresponding assignments. The course is designed to progressively build your distributed systems skills from fundamentals to advanced orchestration.&lt;/p&gt;&#xA;&lt;h2 id=&#34;-weekly-schedule&#34;&gt;&#xA;  üóìÔ∏è Weekly Schedule&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#-weekly-schedule&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th style=&#34;text-align: center&#34;&gt;&lt;strong&gt;Week&lt;/strong&gt;&lt;/th&gt;&#xA;          &lt;th&gt;&lt;strong&gt;Lecture Topics&lt;/strong&gt;&lt;/th&gt;&#xA;          &lt;th&gt;&lt;strong&gt;Lab Assignment&lt;/strong&gt;&lt;/th&gt;&#xA;          &lt;th&gt;&lt;strong&gt;Deliverables&lt;/strong&gt;&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;&lt;strong&gt;1&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;Microservices Fundamentals&lt;/strong&gt; &lt;!-- raw HTML omitted --&gt;‚Ä¢ Introduction to distributed systems&lt;!-- raw HTML omitted --&gt;‚Ä¢ Monolithic vs microservices architecture&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;Phase 1:&lt;/strong&gt; &lt;!-- raw HTML omitted --&gt;Monolithic Smart Library System&lt;/td&gt;&#xA;          &lt;td&gt;Working monolithic application&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;&lt;strong&gt;2-3&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;Transition to Microservices&lt;/strong&gt; &lt;!-- raw HTML omitted --&gt;‚Ä¢ Service decomposition strategies&lt;!-- raw HTML omitted --&gt;‚Ä¢ Inter-service communication&lt;!-- raw HTML omitted --&gt;‚Ä¢ Phase 1 evaluation &amp;amp; feedback&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;Phase 2:&lt;/strong&gt; &lt;!-- raw HTML omitted --&gt;Microservices Implementation&lt;/td&gt;&#xA;          &lt;td&gt;Multiple independent services with API endpoints&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;&lt;strong&gt;4-5&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;API Gateway &amp;amp; Reverse Proxy&lt;/strong&gt; &lt;!-- raw HTML omitted --&gt;‚Ä¢ Nginx configuration &amp;amp; deployment&lt;!-- raw HTML omitted --&gt;‚Ä¢ Load balancing strategies&lt;!-- raw HTML omitted --&gt;‚Ä¢ Phase 2 evaluation &amp;amp; feedback&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;Phase 3:&lt;/strong&gt; &lt;!-- raw HTML omitted --&gt;Nginx Integration&lt;/td&gt;&#xA;          &lt;td&gt;Centralized access point with proper routing&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;&lt;strong&gt;6-7&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;Containerization&lt;/strong&gt; &lt;!-- raw HTML omitted --&gt;‚Ä¢ Docker fundamentals&lt;!-- raw HTML omitted --&gt;‚Ä¢ Container networking&lt;!-- raw HTML omitted --&gt;‚Ä¢ Phase 3 evaluation &amp;amp; feedback&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;Phase 4:&lt;/strong&gt; &lt;!-- raw HTML omitted --&gt;Docker Implementation&lt;/td&gt;&#xA;          &lt;td&gt;Containerized services with proper isolation&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;&lt;strong&gt;8-9&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;Container Orchestration Basics&lt;/strong&gt; &lt;!-- raw HTML omitted --&gt;‚Ä¢ Docker Compose workflows&lt;!-- raw HTML omitted --&gt;‚Ä¢ Multi-container applications&lt;!-- raw HTML omitted --&gt;‚Ä¢ Phase 4 evaluation &amp;amp; feedback&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;Phase 5:&lt;/strong&gt; &lt;!-- raw HTML omitted --&gt;Docker Compose Setup&lt;/td&gt;&#xA;          &lt;td&gt;Multi-container application with defined dependencies&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;&lt;strong&gt;10&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;Advanced Orchestration&lt;/strong&gt; &lt;!-- raw HTML omitted --&gt;‚Ä¢ Docker Swarm architecture&lt;!-- raw HTML omitted --&gt;‚Ä¢ Service scaling &amp;amp; management&lt;!-- raw HTML omitted --&gt;‚Ä¢ Phase 5 evaluation &amp;amp; feedback&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;Group Presentations:&lt;/strong&gt; &lt;!-- raw HTML omitted --&gt;Design &amp;amp; Documentation&lt;/td&gt;&#xA;          &lt;td&gt;Project proposal &amp;amp; architecture diagram&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;&lt;strong&gt;11&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;System Design Principles&lt;/strong&gt; &lt;!-- raw HTML omitted --&gt;‚Ä¢ Scalability patterns&lt;!-- raw HTML omitted --&gt;‚Ä¢ High availability strategies&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;Group Presentations:&lt;/strong&gt; &lt;!-- raw HTML omitted --&gt;Implementation &amp;amp; documentation&lt;/td&gt;&#xA;          &lt;td&gt;Progress report &amp;amp; technical documentation&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;&lt;strong&gt;12-13&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;Group Presentations&lt;/strong&gt; &lt;!-- raw HTML omitted --&gt;‚Ä¢ System design presentations&lt;!-- raw HTML omitted --&gt;‚Ä¢ Industry trendy distributed systems showcase&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;Group Presentations:&lt;/strong&gt; &lt;!-- raw HTML omitted --&gt;Finalization &amp;amp; presentation prep&lt;/td&gt;&#xA;          &lt;td&gt;Final presentation slides &amp;amp; demo&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;&lt;strong&gt;14&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;Course Review &amp;amp; Final Evaluation&lt;/strong&gt; &lt;!-- raw HTML omitted --&gt;‚Ä¢ Best practices review&lt;!-- raw HTML omitted --&gt;‚Ä¢ Industry application discussion&lt;/td&gt;&#xA;          &lt;td&gt;&lt;strong&gt;Final Assessment&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;Course completion &amp;amp; project evaluation&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;h2 id=&#34;-grading-distribution&#34;&gt;&#xA;  üìä Grading Distribution&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#-grading-distribution&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;Individual Lab Phases (1-5)&lt;/strong&gt;: Each phase will be evaluated based on functionality, code quality, and documentation. Detailed rubric will be published soon.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Group Project &amp;amp; Presentation&lt;/strong&gt;: Assessment will focus on system design principles, technical implementation, and presentation quality. Detailed evaluation criteria will be shared before Week 10.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;-important-notes&#34;&gt;&#xA;  üîç Important Notes&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#-important-notes&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Each phase builds upon the previous one, creating a complete learning journey&lt;/li&gt;&#xA;&lt;li&gt;Evaluations occur regularly to provide feedback and guidance&lt;/li&gt;&#xA;&lt;li&gt;Group work begins in Week 10, allowing sufficient time for comprehensive research and implementation&lt;/li&gt;&#xA;&lt;li&gt;Final presentations should demonstrate both technical mastery and effective communication&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>Prerequisites</title>
      <link>http://localhost:1313/docs/prerequisites/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/docs/prerequisites/</guid>
      <description>&lt;h1 id=&#34;-prerequisites&#34;&gt;&#xA;  üìã Prerequisites&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#-prerequisites&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;p&gt;Before diving into the Smart Library System project, it‚Äôs important to ensure that students or participants have the foundational knowledge and hands-on exposure to the following areas:&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;-1-basic-understanding-of-web-application--development&#34;&gt;&#xA;  üåê 1. Basic Understanding of Web Application &amp;amp; Development&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#-1-basic-understanding-of-web-application--development&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Understand the &lt;strong&gt;client-server model&lt;/strong&gt;.&lt;/li&gt;&#xA;&lt;li&gt;Familiarity with how a web application works (browser ‚Üí server ‚Üí database).&lt;/li&gt;&#xA;&lt;li&gt;Concept of &lt;strong&gt;HTTP verbs&lt;/strong&gt;: &lt;code&gt;GET&lt;/code&gt;, &lt;code&gt;POST&lt;/code&gt;, &lt;code&gt;PUT&lt;/code&gt;, &lt;code&gt;DELETE&lt;/code&gt;, etc.&lt;/li&gt;&#xA;&lt;li&gt;Awareness of &lt;strong&gt;RESTful API principles&lt;/strong&gt;:&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Resource-oriented endpoints&lt;/li&gt;&#xA;&lt;li&gt;Stateless communication&lt;/li&gt;&#xA;&lt;li&gt;Uniform interface&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;-2-api-development-in-any-language&#34;&gt;&#xA;  üîß 2. API Development in Any Language&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#-2-api-development-in-any-language&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;Participants should have prior experience with creating APIs in &lt;strong&gt;any programming language&lt;/strong&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Tools</title>
      <link>http://localhost:1313/docs/tools/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/docs/tools/</guid>
      <description>&lt;h1 id=&#34;-tools--technology-stack&#34;&gt;&#xA;  üõ†Ô∏è Tools &amp;amp; Technology Stack&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#-tools--technology-stack&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;p&gt;This section outlines the recommended tools, frameworks, and platforms used in building and testing the &lt;strong&gt;Smart Library System (Microservices Architecture)&lt;/strong&gt;.&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;-language--framework-preferences&#34;&gt;&#xA;  üöÄ Language &amp;amp; Framework Preferences&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#-language--framework-preferences&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;Choose any language or framework from below, depending on your expertise or lab instruction:&lt;/p&gt;&#xA;&lt;h3 id=&#34;-python&#34;&gt;&#xA;  üêç Python&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#-python&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;Framework&lt;/th&gt;&#xA;          &lt;th&gt;Description&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;FastAPI&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;High-performance, modern API framework using ASGI. Ideal for microservices.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;Flask&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;Lightweight WSGI framework. Easy to use, good for learning microservice patterns.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;Django&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;Full-featured web framework. Use with Django REST Framework for API-based microservices.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;h3 id=&#34;-nodejs&#34;&gt;&#xA;  üåê Node.js&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#-nodejs&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;Framework&lt;/th&gt;&#xA;          &lt;th&gt;Description&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;Express.js&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;Minimal and flexible framework for building REST APIs. Fast and widely used.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;h3 id=&#34;-java&#34;&gt;&#xA;  ‚òï Java&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#-java&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;Framework&lt;/th&gt;&#xA;          &lt;th&gt;Description&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;Spring Boot&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;Production-grade microservice framework with robust dependency injection and JPA support.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;h3 id=&#34;-c&#34;&gt;&#xA;  üß± C#&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#-c&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;Framework&lt;/th&gt;&#xA;          &lt;th&gt;Description&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;.NET Core / ASP.NET Core&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;Cross-platform microservice-ready framework by Microsoft. Supports REST APIs out-of-the-box.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;-api-testing-tools&#34;&gt;&#xA;  üåê API Testing Tools&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#-api-testing-tools&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;Tool&lt;/th&gt;&#xA;          &lt;th&gt;Purpose&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;Postman&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;Powerful GUI for testing REST APIs.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;Bruno&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;Open-source and developer-friendly API testing alternative to Postman.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;-preferred-operating-system&#34;&gt;&#xA;  üêß Preferred Operating System&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#-preferred-operating-system&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;OS Version&lt;/th&gt;&#xA;          &lt;th&gt;Description&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;Ubuntu 22.04 LTS&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;Long-Term Support, stable and widely used in cloud environments.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;Ubuntu 24.04 LTS&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;(Upcoming/Recent) Updated LTS version with latest packages.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;-preferred-databases&#34;&gt;&#xA;  üóÉÔ∏è Preferred Databases&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#-preferred-databases&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;Choose your preferred RDBMS per service ‚Äî all options are supported:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Phase 1</title>
      <link>http://localhost:1313/docs/phase-1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/docs/phase-1/</guid>
      <description>&lt;h1 id=&#34;-smart-library-system--monolithic-architecture&#34;&gt;&#xA;  üìò Smart Library System ‚Äì Monolithic Architecture&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#-smart-library-system--monolithic-architecture&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;h2 id=&#34;overview&#34;&gt;&#xA;  Overview&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#overview&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;The &lt;strong&gt;Smart Library System (Monolithic Version)&lt;/strong&gt; is a single, unified application that handles all core functionalities: managing users, books, and book loans. This system is ideal for simple deployments where all components are tightly coupled, sharing the same runtime and database.&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;-functional-modules&#34;&gt;&#xA;  üß© Functional Modules&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#-functional-modules&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;1-user-management-module&#34;&gt;&#xA;  1. &lt;strong&gt;User Management Module&lt;/strong&gt;&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#1-user-management-module&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Register a user (students/faculty).&lt;/li&gt;&#xA;&lt;li&gt;Update user profile.&lt;/li&gt;&#xA;&lt;li&gt;Retrieve user info.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;2-book-management-module&#34;&gt;&#xA;  2. &lt;strong&gt;Book Management Module&lt;/strong&gt;&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#2-book-management-module&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Add/update/remove books.&lt;/li&gt;&#xA;&lt;li&gt;View book availability.&lt;/li&gt;&#xA;&lt;li&gt;Search books by title, author, or genre.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;3-loan-management-module&#34;&gt;&#xA;  3. &lt;strong&gt;Loan Management Module&lt;/strong&gt;&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#3-loan-management-module&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Issue books to users.&lt;/li&gt;&#xA;&lt;li&gt;Return books.&lt;/li&gt;&#xA;&lt;li&gt;View active/past loans.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;-unified-database-schema&#34;&gt;&#xA;  üõ¢Ô∏è Unified Database Schema&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#-unified-database-schema&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;Table&lt;/th&gt;&#xA;          &lt;th&gt;Description&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;users&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;Stores user information.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;books&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;Stores book catalog details.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;loans&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;Tracks issued/returned books.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;p&gt;All modules interact with this &lt;strong&gt;shared relational database&lt;/strong&gt;, typically PostgreSQL or MySQL.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Phase 2</title>
      <link>http://localhost:1313/docs/phase-2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/docs/phase-2/</guid>
      <description>&lt;h1 id=&#34;-smart-library-system--microservices-architecture&#34;&gt;&#xA;  üß© Smart Library System ‚Äì Microservices Architecture&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#-smart-library-system--microservices-architecture&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;h2 id=&#34;overview&#34;&gt;&#xA;  Overview&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#overview&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;In the &lt;strong&gt;microservices version&lt;/strong&gt; of the Smart Library System, the application is divided into three independent services ‚Äî each responsible for a specific domain: &lt;strong&gt;User&lt;/strong&gt;, &lt;strong&gt;Book&lt;/strong&gt;, and &lt;strong&gt;Loan&lt;/strong&gt;. Every service has its &lt;strong&gt;own database&lt;/strong&gt; and communicates with others via &lt;strong&gt;HTTP APIs&lt;/strong&gt; (no queues or Kafka involved in this version).&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;-services-overview&#34;&gt;&#xA;  üß± Services Overview&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#-services-overview&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;1-user-service&#34;&gt;&#xA;  1. &lt;strong&gt;User Service&lt;/strong&gt;&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#1-user-service&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;p&gt;Handles registration, profile management, and user-related queries.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Phase 3</title>
      <link>http://localhost:1313/docs/phase-3/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/docs/phase-3/</guid>
      <description>&lt;h2 id=&#34;-phase-3-reverse-proxy-with-nginx&#34;&gt;&#xA;  üåê Phase 3: Reverse Proxy with Nginx&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#-phase-3-reverse-proxy-with-nginx&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;This phase introduces &lt;strong&gt;Nginx&lt;/strong&gt; as a &lt;strong&gt;reverse proxy&lt;/strong&gt;, acting as the single entry point to route traffic to backend microservices.&lt;/p&gt;&#xA;&lt;h3 id=&#34;-youll-learn&#34;&gt;&#xA;  üéØ You‚Äôll Learn:&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#-youll-learn&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;What is a reverse proxy and why it&amp;rsquo;s important&lt;/li&gt;&#xA;&lt;li&gt;Routing and load balancing strategies&lt;/li&gt;&#xA;&lt;li&gt;How to serve APIs and static content behind Nginx&lt;/li&gt;&#xA;&lt;li&gt;Configuring HTTPS (SSL termination)&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;-topics-covered&#34;&gt;&#xA;  üõ† Topics Covered:&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#-topics-covered&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Installing and configuring Nginx on Linux&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;nginx.conf&lt;/code&gt; structure and virtual hosts&lt;/li&gt;&#xA;&lt;li&gt;Path-based routing:&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;/api/users ‚Üí User Service  &#xA;/api/books ‚Üí Book Service  &#xA;/api/loans ‚Üí Loan Service  &#xA;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;&#xA;&lt;li&gt;Static file delivery for frontend (optional)&lt;/li&gt;&#xA;&lt;li&gt;Logging requests centrally&lt;/li&gt;&#xA;&lt;li&gt;Handling 404s and upstream errors&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>Phase 4</title>
      <link>http://localhost:1313/docs/phase-4/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/docs/phase-4/</guid>
      <description>&lt;hr&gt;&#xA;&lt;h2 id=&#34;-phase-4-containerization-with-docker&#34;&gt;&#xA;  üê≥ Phase 4: Containerization with Docker&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#-phase-4-containerization-with-docker&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;We encapsulate each microservice into its own &lt;strong&gt;Docker container&lt;/strong&gt; to achieve environment consistency and portability.&lt;/p&gt;&#xA;&lt;h3 id=&#34;-youll-learn&#34;&gt;&#xA;  üéØ You‚Äôll Learn:&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#-youll-learn&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Why containerization is essential in microservice ecosystems&lt;/li&gt;&#xA;&lt;li&gt;How to write Dockerfiles for Python, Node.js, Java, and .NET Core apps&lt;/li&gt;&#xA;&lt;li&gt;How to build and run containers&lt;/li&gt;&#xA;&lt;li&gt;Container networking and volume mounting&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;-topics-covered&#34;&gt;&#xA;  üõ† Topics Covered:&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#-topics-covered&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Writing Dockerfiles for each service&lt;/li&gt;&#xA;&lt;li&gt;Installing dependencies inside containers&lt;/li&gt;&#xA;&lt;li&gt;Exposing ports and configuring environment variables&lt;/li&gt;&#xA;&lt;li&gt;Docker CLI basics: &lt;code&gt;build&lt;/code&gt;, &lt;code&gt;run&lt;/code&gt;, &lt;code&gt;exec&lt;/code&gt;, &lt;code&gt;logs&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;Creating named networks for communication between services&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>Phase 5</title>
      <link>http://localhost:1313/docs/phase-5/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/docs/phase-5/</guid>
      <description>&lt;h2 id=&#34;-phase-5-managing-with-docker-compose&#34;&gt;&#xA;  ‚öôÔ∏è Phase 5: Managing with Docker Compose&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#-phase-5-managing-with-docker-compose&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;With multiple services running, we now use &lt;strong&gt;Docker Compose&lt;/strong&gt; to manage them together through a unified configuration.&lt;/p&gt;&#xA;&lt;h3 id=&#34;-youll-learn&#34;&gt;&#xA;  üéØ You‚Äôll Learn:&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#-youll-learn&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Structuring a &lt;code&gt;docker-compose.yml&lt;/code&gt; file&lt;/li&gt;&#xA;&lt;li&gt;Defining services, networks, and volumes&lt;/li&gt;&#xA;&lt;li&gt;Scaling services for development/testing&lt;/li&gt;&#xA;&lt;li&gt;Making services talk to each other by name&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;-topics-covered&#34;&gt;&#xA;  üõ† Topics Covered:&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#-topics-covered&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Docker Compose syntax and service definitions&lt;/li&gt;&#xA;&lt;li&gt;Declaring DB containers (e.g., Postgres, MySQL)&lt;/li&gt;&#xA;&lt;li&gt;Health checks and restart policies&lt;/li&gt;&#xA;&lt;li&gt;Local development workflows with Compose&lt;/li&gt;&#xA;&lt;li&gt;Mounting source code with &lt;code&gt;volumes:&lt;/code&gt; for live reloading&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>Phase 6</title>
      <link>http://localhost:1313/docs/phase-6/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/docs/phase-6/</guid>
      <description>&lt;hr&gt;&#xA;&lt;h2 id=&#34;-phase-6-orchestration-with-docker-swarm-optional&#34;&gt;&#xA;  üö¢ Phase 6: Orchestration with Docker Swarm (Optional)&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#-phase-6-orchestration-with-docker-swarm-optional&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;Once you‚Äôve mastered local development, we introduce &lt;strong&gt;Docker Swarm&lt;/strong&gt; for distributed service orchestration.&lt;/p&gt;&#xA;&lt;h3 id=&#34;-youll-learn&#34;&gt;&#xA;  üéØ You‚Äôll Learn:&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#-youll-learn&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Running your app on a multi-node Docker cluster&lt;/li&gt;&#xA;&lt;li&gt;Service scaling, rolling updates, and high availability&lt;/li&gt;&#xA;&lt;li&gt;Managing load balancing and service discovery&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;-topics-covered&#34;&gt;&#xA;  üõ† Topics Covered:&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#-topics-covered&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Initializing a Docker Swarm (&lt;code&gt;docker swarm init&lt;/code&gt;)&lt;/li&gt;&#xA;&lt;li&gt;Creating overlay networks&lt;/li&gt;&#xA;&lt;li&gt;Deploying stacks via &lt;code&gt;docker stack deploy&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;Scaling services with replicas&lt;/li&gt;&#xA;&lt;li&gt;Monitoring service health and logs&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;üîÅ &lt;strong&gt;Optional Lab&lt;/strong&gt;: Simulate node failure and observe Swarm&amp;rsquo;s self-healing&lt;/p&gt;</description>
    </item>
    <item>
      <title>Systems Design Problems</title>
      <link>http://localhost:1313/docs/system-design/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/docs/system-design/</guid>
      <description>&lt;h1 id=&#34;-system-design-at-scale&#34;&gt;&#xA;  üèóÔ∏è System Design at Scale&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#-system-design-at-scale&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;h2 id=&#34;overview&#34;&gt;&#xA;  Overview&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#overview&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;In this phase, we&amp;rsquo;ll tackle the challenge of designing systems that can scale from hundreds to millions of users. Students will work in teams to develop comprehensive system architectures that demonstrate an understanding of distributed systems principles in real-world scenarios.&lt;/p&gt;&#xA;&lt;h2 id=&#34;-learning-objectives&#34;&gt;&#xA;  üìã Learning Objectives&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#-learning-objectives&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Apply distributed systems concepts to practical, industry-relevant problems&lt;/li&gt;&#xA;&lt;li&gt;Design scalable architectures that evolve with increasing user demands&lt;/li&gt;&#xA;&lt;li&gt;Identify and resolve bottlenecks in system performance&lt;/li&gt;&#xA;&lt;li&gt;Make informed trade-offs between consistency, availability, and partition tolerance&lt;/li&gt;&#xA;&lt;li&gt;Document and present technical designs effectively&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;-methodology&#34;&gt;&#xA;  üîÑ Methodology&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#-methodology&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;Each team will:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Some Distributed Systems Exploration</title>
      <link>http://localhost:1313/docs/exploration/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/docs/exploration/</guid>
      <description>&lt;h1 id=&#34;-distributed-systems-exploration&#34;&gt;&#xA;  üåç Distributed Systems Exploration&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#-distributed-systems-exploration&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;p&gt;Distributed systems are the backbone of scalable and fault-tolerant applications. In this phase, we explore &lt;strong&gt;6+ distributed technologies&lt;/strong&gt;, understanding &lt;strong&gt;how they work&lt;/strong&gt;, &lt;strong&gt;what problems they solve&lt;/strong&gt;, and &lt;strong&gt;where they fit in microservices&lt;/strong&gt;.&lt;/p&gt;&#xA;&lt;h2 id=&#34;-exploration-methodology&#34;&gt;&#xA;  üîç Exploration Methodology&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#-exploration-methodology&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;For this phase, students will work in collaborative teams to deeply investigate distributed systems technologies. Each team will:&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&lt;strong&gt;Research &amp;amp; Analyze&lt;/strong&gt;: Thoroughly explore an assigned distributed system technology&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Document Findings&lt;/strong&gt;: Create comprehensive technical documentation&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Present Solutions&lt;/strong&gt;: Deliver an engaging presentation to peers and faculty&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;Your exploration should focus on these key aspects:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Career Path</title>
      <link>http://localhost:1313/docs/career-path/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/docs/career-path/</guid>
      <description>&lt;h1 id=&#34;-career-path&#34;&gt;&#xA;  üåê Career Path&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#-career-path&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;h2 id=&#34;-why-distributed-systems-matter-for-your-career&#34;&gt;&#xA;  üöÄ Why Distributed Systems Matter for Your Career&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#-why-distributed-systems-matter-for-your-career&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;The skills you&amp;rsquo;re developing in this Distributed Systems course are foundational to some of the most in-demand and well-compensated roles in the technology industry. As systems continue to scale and organizations embrace cloud-native architectures, professionals who understand distributed systems concepts are increasingly valuable.&lt;/p&gt;&#xA;&lt;h3 id=&#34;-from-academic-concepts-to-industry-roles&#34;&gt;&#xA;  üîç From Academic Concepts to Industry Roles&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#-from-academic-concepts-to-industry-roles&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;p&gt;This course introduces you to concepts and technologies that directly translate to professional roles such as:&lt;/p&gt;</description>
    </item>
    <item>
      <title>About Me</title>
      <link>http://localhost:1313/docs/about-me/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/docs/about-me/</guid>
      <description>&lt;h2 id=&#34;-about-me&#34;&gt;&#xA;  üë®‚Äçüíª About Me&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#-about-me&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;Hello! I‚Äôm &lt;strong&gt;Mohibul Alam&lt;/strong&gt;, a passionate and hands-on &lt;strong&gt;Senior DevOps Engineer&lt;/strong&gt; with a strong background in cloud infrastructure, automation, and modern backend systems. I bring almost 4 years of experience designing and deploying &lt;strong&gt;scalable, secure, and high-performance solutions&lt;/strong&gt; across AWS, Azure, and on-premises environments.&lt;/p&gt;&#xA;&lt;p&gt;My expertise lies in &lt;strong&gt;DevOps automation, container orchestration, observability, and backend development&lt;/strong&gt;, with a growing interest in building intelligent systems powered by &lt;strong&gt;LLMs and AI agents&lt;/strong&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Centralized Systems</title>
      <link>http://localhost:1313/docs/lecture-resources/lecture-1/cs/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/docs/lecture-resources/lecture-1/cs/</guid>
      <description>&lt;h1 id=&#34;centralized-systems&#34;&gt;&#xA;  Centralized Systems&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#centralized-systems&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;h2 id=&#34;-what-is-a-centralized-system&#34;&gt;&#xA;  üîç What is a Centralized System?&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#-what-is-a-centralized-system&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;A centralized system is an architecture where all processing, data storage, and control functions are concentrated in a single computational entity. This central node handles all requests, manages all resources, and serves as the sole decision-making authority.&lt;/p&gt;&#xA;&lt;p&gt;üëâ All components, users, and services connect directly to this central entity without intermediate processing or control distribution.&lt;/p&gt;&#xA;&lt;h3 id=&#34;-real-world-analogy&#34;&gt;&#xA;  üè´ Real-World Analogy&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#-real-world-analogy&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;p&gt;Imagine a traditional classroom setup:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Distributed Systems</title>
      <link>http://localhost:1313/docs/lecture-resources/lecture-1/ds/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/docs/lecture-resources/lecture-1/ds/</guid>
      <description>&lt;h1 id=&#34;introduction-to-distributed-systems&#34;&gt;&#xA;  Introduction to Distributed Systems&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#introduction-to-distributed-systems&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;h2 id=&#34;-what-is-a-distributed-system&#34;&gt;&#xA;  ‚ú® What is a Distributed System?&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#-what-is-a-distributed-system&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;A distributed system is a collection of autonomous computing elements that appears to its users as a single coherent system.&lt;/p&gt;&#xA;&lt;p&gt;üëâ These independent nodes communicate and coordinate their actions by passing messages over a network to achieve a common goal.&lt;/p&gt;&#xA;&lt;h3 id=&#34;-technical-architecture&#34;&gt;&#xA;  üèóÔ∏è Technical Architecture&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#-technical-architecture&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;    ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê                 ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê&#xA;    ‚îÇ                          ‚îÇ                 ‚îÇ                        ‚îÇ&#xA;    ‚îÇ       CLIENT 1           ‚îÇ                 ‚îÇ       CLIENT 2         ‚îÇ&#xA;    ‚îÇ                          ‚îÇ                 ‚îÇ                        ‚îÇ&#xA;    ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò                 ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò&#xA;                   ‚îÇ                                         ‚îÇ&#xA;                   ‚îÇ                                         ‚îÇ&#xA;                   ‚îÇ                                         ‚îÇ&#xA;                   ‚ñº                                         ‚ñº&#xA;                  ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê&#xA;                  ‚îÇ                                   ‚îÇ&#xA;                  ‚îÇ        LOAD BALANCER             ‚îÇ&#xA;                  ‚îÇ                                   ‚îÇ&#xA;                  ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò&#xA;                              ‚îÇ           ‚îÇ&#xA;                 ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò           ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê&#xA;                 ‚îÇ                                     ‚îÇ&#xA;    ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ñº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê      ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ñº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê&#xA;    ‚îÇ                          ‚îÇ      ‚îÇ                            ‚îÇ&#xA;    ‚îÇ      SERVER A            ‚îÇ‚óÑ‚îÄ‚îÄ‚îÄ‚îÄ‚ñ∫‚îÇ       SERVER B             ‚îÇ&#xA;    ‚îÇ  (Authentication)        ‚îÇ      ‚îÇ    (Product Catalog)       ‚îÇ&#xA;    ‚îÇ                          ‚îÇ      ‚îÇ                            ‚îÇ&#xA;    ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò      ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò&#xA;                 ‚îÇ                                  ‚îÇ&#xA;                 ‚îÇ            ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê    ‚îÇ&#xA;                 ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ñ∫‚îÇ                ‚îÇ‚óÑ‚îÄ‚îÄ‚îÄ‚îò&#xA;                              ‚îÇ   DATABASE     ‚îÇ&#xA;                              ‚îÇ                ‚îÇ&#xA;                              ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò&#xA;                                       ‚îÇ&#xA;                                       ‚îÇ&#xA;    ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê         ‚îÇ         ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê&#xA;    ‚îÇ                        ‚îÇ         ‚îÇ         ‚îÇ                        ‚îÇ&#xA;    ‚îÇ       SERVER C         ‚îÇ‚óÑ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ñ∫‚îÇ       SERVER D         ‚îÇ&#xA;    ‚îÇ    (Order Processing)  ‚îÇ                   ‚îÇ   (Payment Service)    ‚îÇ&#xA;    ‚îÇ                        ‚îÇ                   ‚îÇ                        ‚îÇ&#xA;    ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò                   ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;-real-world-analogy&#34;&gt;&#xA;  üîç Real-World Analogy&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#-real-world-analogy&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;p&gt;Imagine a collaborative research project:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Types of Distributed Systems</title>
      <link>http://localhost:1313/docs/lecture-resources/lecture-1/types-ds/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/docs/lecture-resources/lecture-1/types-ds/</guid>
      <description>&lt;h1 id=&#34;types-of-distributed-systems&#34;&gt;&#xA;  Types of Distributed Systems&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#types-of-distributed-systems&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;p&gt;Distributed systems can be categorized based on their architecture, purpose, and how components interact. Each type has distinct characteristics that make it suitable for specific use cases.&lt;/p&gt;&#xA;&lt;h2 id=&#34;1-client-server-systems&#34;&gt;&#xA;  1. Client-Server Systems&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#1-client-server-systems&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;architecture&#34;&gt;&#xA;  Architecture&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#architecture&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê     ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê     ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê&#xA;‚îÇ         ‚îÇ     ‚îÇ         ‚îÇ     ‚îÇ         ‚îÇ&#xA;‚îÇ CLIENT  ‚îÇ‚îÄ‚îÄ‚îÄ‚îÄ‚ñ∫‚îÇ SERVER  ‚îÇ‚óÑ‚îÄ‚îÄ‚îÄ‚îÄ‚îÇ CLIENT  ‚îÇ&#xA;‚îÇ    A    ‚îÇ     ‚îÇ         ‚îÇ     ‚îÇ    B    ‚îÇ&#xA;‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò     ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò     ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò&#xA;                     ‚ñ≤&#xA;                     ‚îÇ&#xA;                     ‚ñº&#xA;                ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê&#xA;                ‚îÇ         ‚îÇ&#xA;                ‚îÇ CLIENT  ‚îÇ&#xA;                ‚îÇ    C    ‚îÇ&#xA;                ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;key-characteristics&#34;&gt;&#xA;  Key Characteristics&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#key-characteristics&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;Role Separation&lt;/strong&gt;: Clear division between service providers (servers) and consumers (clients)&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Centralized Control&lt;/strong&gt;: Servers manage resources and enforce access policies&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Request-Response Pattern&lt;/strong&gt;: Communication follows a request-response cycle&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Scalability Challenge&lt;/strong&gt;: Servers can become bottlenecks under high load&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;technical-implementation&#34;&gt;&#xA;  Technical Implementation&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#technical-implementation&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;Communication Protocols&lt;/strong&gt;: HTTP/HTTPS, WebSockets, gRPC&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Load Distribution&lt;/strong&gt;: Often uses load balancers to distribute client requests&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;State Management&lt;/strong&gt;: Servers typically maintain session state&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;real-world-examples&#34;&gt;&#xA;  Real-World Examples&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#real-world-examples&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;Web Applications&lt;/strong&gt;: Gmail, online banking portals&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;API Services&lt;/strong&gt;: Twitter API, payment gateways&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Database Clients&lt;/strong&gt;: SQL clients connecting to database servers&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Enterprise Applications&lt;/strong&gt;: SAP, Salesforce&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;2-peer-to-peer-p2p-systems&#34;&gt;&#xA;  2. Peer-to-Peer (P2P) Systems&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#2-peer-to-peer-p2p-systems&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;architecture-1&#34;&gt;&#xA;  Architecture&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#architecture-1&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê     ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê     ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê&#xA;‚îÇ         ‚îÇ‚óÑ‚îÄ‚îÄ‚îÄ‚ñ∫‚îÇ         ‚îÇ‚óÑ‚îÄ‚îÄ‚îÄ‚ñ∫‚îÇ         ‚îÇ&#xA;‚îÇ PEER A  ‚îÇ     ‚îÇ PEER B  ‚îÇ     ‚îÇ PEER C  ‚îÇ&#xA;‚îÇ         ‚îÇ‚óÑ‚îÄ‚îê  ‚îÇ         ‚îÇ  ‚îå‚îÄ‚ñ∫‚îÇ         ‚îÇ&#xA;‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò  ‚îÇ  ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò  ‚îÇ  ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò&#xA;             ‚îÇ               ‚îÇ&#xA;             ‚îÇ  ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê  ‚îÇ&#xA;             ‚îÇ  ‚îÇ         ‚îÇ  ‚îÇ&#xA;             ‚îî‚îÄ‚ñ∫‚îÇ PEER D  ‚îÇ‚óÑ‚îÄ‚îò&#xA;                ‚îÇ         ‚îÇ&#xA;                ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;key-characteristics-1&#34;&gt;&#xA;  Key Characteristics&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#key-characteristics-1&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;Equality&lt;/strong&gt;: All nodes can function as both clients and servers&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Decentralization&lt;/strong&gt;: No central coordination point&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Resilience&lt;/strong&gt;: System continues functioning when nodes join or leave&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Resource Sharing&lt;/strong&gt;: Computing power, storage, and bandwidth are collectively shared&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;technical-implementation-1&#34;&gt;&#xA;  Technical Implementation&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#technical-implementation-1&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;Discovery Mechanisms&lt;/strong&gt;: DHT (Distributed Hash Tables), gossip protocols&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Routing Algorithms&lt;/strong&gt;: Chord, Kademlia, Pastry&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Data Replication&lt;/strong&gt;: Content is often replicated across multiple peers&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Security Challenges&lt;/strong&gt;: Trust establishment without central authority&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;real-world-examples-1&#34;&gt;&#xA;  Real-World Examples&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#real-world-examples-1&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;File Sharing&lt;/strong&gt;: BitTorrent, IPFS (InterPlanetary File System)&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Cryptocurrency Networks&lt;/strong&gt;: Bitcoin, Ethereum blockchain&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Communication Tools&lt;/strong&gt;: Early versions of Skype&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Distributed Computing&lt;/strong&gt;: BOINC platform projects&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;3-clustered-systems&#34;&gt;&#xA;  3. Clustered Systems&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#3-clustered-systems&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;architecture-2&#34;&gt;&#xA;  Architecture&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#architecture-2&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê&#xA;‚îÇ                                       ‚îÇ&#xA;‚îÇ            CLUSTER MANAGER            ‚îÇ&#xA;‚îÇ                                       ‚îÇ&#xA;‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò&#xA;        ‚îÇ           ‚îÇ           ‚îÇ&#xA;        ‚ñº           ‚ñº           ‚ñº&#xA;‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê&#xA;‚îÇ           ‚îÇ ‚îÇ           ‚îÇ ‚îÇ           ‚îÇ&#xA;‚îÇ  NODE 1   ‚îÇ ‚îÇ  NODE 2   ‚îÇ ‚îÇ  NODE 3   ‚îÇ&#xA;‚îÇ           ‚îÇ ‚îÇ           ‚îÇ ‚îÇ           ‚îÇ&#xA;‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;key-characteristics-2&#34;&gt;&#xA;  Key Characteristics&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#key-characteristics-2&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;Physical Proximity&lt;/strong&gt;: Nodes typically located in the same data center&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Homogeneous Hardware&lt;/strong&gt;: Often uses similar or identical machines&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Shared Resources&lt;/strong&gt;: Common storage, memory, or processing capabilities&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;High Availability&lt;/strong&gt;: Designed for fault tolerance and continuous operation&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;technical-implementation-2&#34;&gt;&#xA;  Technical Implementation&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#technical-implementation-2&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;Resource Management&lt;/strong&gt;: Uses cluster managers like Kubernetes, Mesos&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Job Scheduling&lt;/strong&gt;: Distributes workloads across available nodes&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Shared Storage&lt;/strong&gt;: Often uses distributed file systems or SANs&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Heartbeat Protocols&lt;/strong&gt;: Monitors node health and manages failover&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;real-world-examples-2&#34;&gt;&#xA;  Real-World Examples&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#real-world-examples-2&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;High-Performance Computing&lt;/strong&gt;: Scientific simulation clusters&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Container Orchestration&lt;/strong&gt;: Kubernetes clusters running microservices&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Big Data Processing&lt;/strong&gt;: Hadoop/Spark clusters&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Database Clusters&lt;/strong&gt;: MySQL Cluster, PostgreSQL with replication&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;4-grid-computing-systems&#34;&gt;&#xA;  4. Grid Computing Systems&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#4-grid-computing-systems&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;architecture-3&#34;&gt;&#xA;  Architecture&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#architecture-3&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê     ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê&#xA;‚îÇ  ORGANIZATION ‚îÇ     ‚îÇ  ORGANIZATION ‚îÇ&#xA;‚îÇ       A       ‚îÇ     ‚îÇ       B       ‚îÇ&#xA;‚îÇ ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê     ‚îÇ ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê&#xA;‚îÇ ‚îÇNODE ‚îÇ ‚îÇNODE ‚îÇ     ‚îÇ ‚îÇNODE ‚îÇ ‚îÇNODE ‚îÇ&#xA;‚îÇ ‚îÇ  1  ‚îÇ ‚îÇ  2  ‚îÇ     ‚îÇ ‚îÇ  1  ‚îÇ ‚îÇ  2  ‚îÇ&#xA;‚îÇ ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò     ‚îÇ ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò&#xA;‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò     ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò&#xA;        ‚îÇ                     ‚îÇ&#xA;        ‚ñº                     ‚ñº&#xA;‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê&#xA;‚îÇ                                       ‚îÇ&#xA;‚îÇ          GRID MIDDLEWARE              ‚îÇ&#xA;‚îÇ                                       ‚îÇ&#xA;‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò&#xA;                    ‚îÇ&#xA;                    ‚ñº&#xA;‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê&#xA;‚îÇ                                       ‚îÇ&#xA;‚îÇ         RESEARCH PROBLEM              ‚îÇ&#xA;‚îÇ                                       ‚îÇ&#xA;‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;key-characteristics-3&#34;&gt;&#xA;  Key Characteristics&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#key-characteristics-3&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;Geographic Distribution&lt;/strong&gt;: Resources spread across multiple locations&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Heterogeneous Resources&lt;/strong&gt;: Different types of computers and networks&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Virtual Organizations&lt;/strong&gt;: Collaboration across institutional boundaries&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Resource Sharing&lt;/strong&gt;: Focuses on sharing computing power for large problems&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;technical-implementation-3&#34;&gt;&#xA;  Technical Implementation&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#technical-implementation-3&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;Grid Middleware&lt;/strong&gt;: Software like Globus Toolkit that manages resources&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Job Submission&lt;/strong&gt;: Uses specialized protocols for submitting computing tasks&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Security Infrastructure&lt;/strong&gt;: Certificate-based authentication across domains&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Data Management&lt;/strong&gt;: Tools for moving large datasets between grid sites&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;real-world-examples-3&#34;&gt;&#xA;  Real-World Examples&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#real-world-examples-3&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;Scientific Computing&lt;/strong&gt;: SETI@home (search for extraterrestrial intelligence)&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Medical Research&lt;/strong&gt;: Folding@home (protein folding simulations)&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Particle Physics&lt;/strong&gt;: LHC Computing Grid (analyzing CERN data)&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Climate Modeling&lt;/strong&gt;: Earth System Grid (climate simulation data)&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;5-distributed-databases&#34;&gt;&#xA;  5. Distributed Databases&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#5-distributed-databases&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;architecture-4&#34;&gt;&#xA;  Architecture&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#architecture-4&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê      ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê&#xA;‚îÇ             ‚îÇ      ‚îÇ             ‚îÇ&#xA;‚îÇ  DATABASE   ‚îÇ‚óÑ‚îÄ‚îÄ‚îÄ‚îÄ‚ñ∫‚îÇ  DATABASE   ‚îÇ&#xA;‚îÇ   NODE 1    ‚îÇ      ‚îÇ   NODE 2    ‚îÇ&#xA;‚îÇ  (Shard A)  ‚îÇ      ‚îÇ  (Shard B)  ‚îÇ&#xA;‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò      ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò&#xA;       ‚îÇ                    ‚îÇ&#xA;       ‚îÇ     ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê    ‚îÇ&#xA;       ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚ñ∫‚îÇ         ‚îÇ‚óÑ‚îÄ‚îÄ‚îÄ‚îò&#xA;             ‚îÇ QUERY   ‚îÇ&#xA;             ‚îÇ ROUTER  ‚îÇ&#xA;             ‚îÇ         ‚îÇ&#xA;             ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îò&#xA;                  ‚îÇ&#xA;                  ‚ñº&#xA;             ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê&#xA;             ‚îÇ         ‚îÇ&#xA;             ‚îÇ CLIENT  ‚îÇ&#xA;             ‚îÇ         ‚îÇ&#xA;             ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;key-characteristics-4&#34;&gt;&#xA;  Key Characteristics&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#key-characteristics-4&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;Data Partitioning&lt;/strong&gt;: Information divided across multiple nodes (sharding)&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Replication&lt;/strong&gt;: Data copied to multiple locations for redundancy&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Consistency Models&lt;/strong&gt;: Various approaches to maintaining data consistency&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Distributed Transactions&lt;/strong&gt;: Mechanisms for maintaining ACID properties across nodes&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;technical-implementation-4&#34;&gt;&#xA;  Technical Implementation&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#technical-implementation-4&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;Consensus Algorithms&lt;/strong&gt;: Paxos, Raft for maintaining consistency&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Partitioning Strategies&lt;/strong&gt;: Range-based, hash-based, or directory-based sharding&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Query Processing&lt;/strong&gt;: Distributed query execution and optimization&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;CAP Theorem Tradeoffs&lt;/strong&gt;: Balancing Consistency, Availability, and Partition tolerance&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;real-world-examples-4&#34;&gt;&#xA;  Real-World Examples&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#real-world-examples-4&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;NoSQL Databases&lt;/strong&gt;: Cassandra (AP system), MongoDB (CP system)&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;NewSQL Databases&lt;/strong&gt;: Google Spanner, CockroachDB&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Time-Series Databases&lt;/strong&gt;: InfluxDB, TimescaleDB&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Graph Databases&lt;/strong&gt;: Neo4j (clustered), Amazon Neptune&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;6-distributed-file-systems&#34;&gt;&#xA;  6. Distributed File Systems&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#6-distributed-file-systems&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;architecture-5&#34;&gt;&#xA;  Architecture&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#architecture-5&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê      ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê&#xA;‚îÇ             ‚îÇ      ‚îÇ             ‚îÇ&#xA;‚îÇ   STORAGE   ‚îÇ      ‚îÇ   STORAGE   ‚îÇ&#xA;‚îÇ   NODE 1    ‚îÇ      ‚îÇ   NODE 2    ‚îÇ&#xA;‚îÇ             ‚îÇ      ‚îÇ             ‚îÇ&#xA;‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò      ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò&#xA;       ‚îÇ                    ‚îÇ&#xA;       ‚îÇ    ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê    ‚îÇ&#xA;       ‚îî‚îÄ‚îÄ‚îÄ‚ñ∫‚îÇ          ‚îÇ‚óÑ‚îÄ‚îÄ‚îÄ‚îò&#xA;            ‚îÇ METADATA ‚îÇ&#xA;            ‚îÇ  SERVER  ‚îÇ&#xA;            ‚îÇ          ‚îÇ&#xA;            ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îò&#xA;                  ‚îÇ&#xA;                  ‚ñº&#xA;             ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê&#xA;             ‚îÇ         ‚îÇ&#xA;             ‚îÇ CLIENT  ‚îÇ&#xA;             ‚îÇ         ‚îÇ&#xA;             ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;key-characteristics-5&#34;&gt;&#xA;  Key Characteristics&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#key-characteristics-5&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;Transparent Access&lt;/strong&gt;: Files appear as if they&amp;rsquo;re on a local system&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Location Independence&lt;/strong&gt;: Users don&amp;rsquo;t need to know physical file locations&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Fault Tolerance&lt;/strong&gt;: System continues operating despite node failures&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Scalability&lt;/strong&gt;: Can add storage nodes to increase capacity&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;technical-implementation-5&#34;&gt;&#xA;  Technical Implementation&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#technical-implementation-5&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;Chunking&lt;/strong&gt;: Files split into blocks distributed across nodes&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Metadata Management&lt;/strong&gt;: Separate servers track file locations and attributes&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Caching&lt;/strong&gt;: Local caching improves performance for frequently accessed files&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Consistency Protocols&lt;/strong&gt;: Mechanisms to handle concurrent file access&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;real-world-examples-5&#34;&gt;&#xA;  Real-World Examples&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#real-world-examples-5&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;Cloud Storage&lt;/strong&gt;: Amazon S3, Google Cloud Storage&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Big Data Storage&lt;/strong&gt;: Hadoop Distributed File System (HDFS)&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Enterprise Storage&lt;/strong&gt;: GlusterFS, Ceph&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Research Systems&lt;/strong&gt;: Google File System (GFS), Andrew File System (AFS)&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;7-cloud-based-distributed-systems&#34;&gt;&#xA;  7. Cloud-Based Distributed Systems&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#7-cloud-based-distributed-systems&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;architecture-6&#34;&gt;&#xA;  Architecture&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#architecture-6&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê&#xA;‚îÇ                                                       ‚îÇ&#xA;‚îÇ                    CLOUD PROVIDER                     ‚îÇ&#xA;‚îÇ                                                       ‚îÇ&#xA;‚îÇ  ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê   ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê   ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê  ‚îÇ&#xA;‚îÇ  ‚îÇ             ‚îÇ   ‚îÇ             ‚îÇ   ‚îÇ             ‚îÇ  ‚îÇ&#xA;‚îÇ  ‚îÇ    COMPUTE  ‚îÇ   ‚îÇ   STORAGE   ‚îÇ   ‚îÇ  DATABASE   ‚îÇ  ‚îÇ&#xA;‚îÇ  ‚îÇ   SERVICES  ‚îÇ   ‚îÇ  SERVICES   ‚îÇ   ‚îÇ  SERVICES   ‚îÇ  ‚îÇ&#xA;‚îÇ  ‚îÇ             ‚îÇ   ‚îÇ             ‚îÇ   ‚îÇ             ‚îÇ  ‚îÇ&#xA;‚îÇ  ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò   ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò   ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò  ‚îÇ&#xA;‚îÇ                                                       ‚îÇ&#xA;‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò&#xA;                            ‚îÇ&#xA;                            ‚ñº&#xA;‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê    ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê    ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê&#xA;‚îÇ               ‚îÇ    ‚îÇ             ‚îÇ    ‚îÇ               ‚îÇ&#xA;‚îÇ    MOBILE     ‚îÇ    ‚îÇ    WEB      ‚îÇ    ‚îÇ     IOT       ‚îÇ&#xA;‚îÇ    CLIENTS    ‚îÇ    ‚îÇ   CLIENTS   ‚îÇ    ‚îÇ    DEVICES    ‚îÇ&#xA;‚îÇ               ‚îÇ    ‚îÇ             ‚îÇ    ‚îÇ               ‚îÇ&#xA;‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò    ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò    ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;key-characteristics-6&#34;&gt;&#xA;  Key Characteristics&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#key-characteristics-6&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;Elasticity&lt;/strong&gt;: Resources can scale up or down based on demand&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Service-Based&lt;/strong&gt;: Composed of multiple specialized services&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Multi-Tenancy&lt;/strong&gt;: Infrastructure shared among multiple customers&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Pay-Per-Use&lt;/strong&gt;: Resources billed based on actual consumption&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;technical-implementation-6&#34;&gt;&#xA;  Technical Implementation&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#technical-implementation-6&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;Virtualization&lt;/strong&gt;: Uses VMs, containers, or serverless functions&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Service Orchestration&lt;/strong&gt;: Automated provisioning and management&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;API Gateways&lt;/strong&gt;: Manages access to backend services&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Monitoring &amp;amp; Telemetry&lt;/strong&gt;: Distributed tracing and logging&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;real-world-examples-6&#34;&gt;&#xA;  Real-World Examples&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#real-world-examples-6&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;IaaS&lt;/strong&gt;: Amazon EC2, Microsoft Azure VMs&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;PaaS&lt;/strong&gt;: Heroku, Google App Engine&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;SaaS&lt;/strong&gt;: Salesforce, Microsoft 365&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Serverless&lt;/strong&gt;: AWS Lambda, Azure Functions&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;8-microservices-architecture&#34;&gt;&#xA;  8. Microservices Architecture&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#8-microservices-architecture&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;architecture-7&#34;&gt;&#xA;  Architecture&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#architecture-7&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê  ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê  ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê&#xA;‚îÇ            ‚îÇ  ‚îÇ            ‚îÇ  ‚îÇ            ‚îÇ&#xA;‚îÇ   USER     ‚îÇ  ‚îÇ  PRODUCT   ‚îÇ  ‚îÇ   ORDER    ‚îÇ&#xA;‚îÇ  SERVICE   ‚îÇ  ‚îÇ  SERVICE   ‚îÇ  ‚îÇ  SERVICE   ‚îÇ&#xA;‚îÇ            ‚îÇ  ‚îÇ            ‚îÇ  ‚îÇ            ‚îÇ&#xA;‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò  ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò  ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò&#xA;      ‚îÇ               ‚îÇ               ‚îÇ&#xA;      ‚îÇ               ‚îÇ               ‚îÇ&#xA;      ‚ñº               ‚ñº               ‚ñº&#xA;‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê&#xA;‚îÇ                                            ‚îÇ&#xA;‚îÇ              API GATEWAY                   ‚îÇ&#xA;‚îÇ                                            ‚îÇ&#xA;‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò&#xA;                     ‚îÇ&#xA;                     ‚ñº&#xA;              ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê&#xA;              ‚îÇ             ‚îÇ&#xA;              ‚îÇ   CLIENT    ‚îÇ&#xA;              ‚îÇ             ‚îÇ&#xA;              ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;key-characteristics-7&#34;&gt;&#xA;  Key Characteristics&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#key-characteristics-7&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;Service Independence&lt;/strong&gt;: Each service can be developed and deployed separately&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Domain-Focused&lt;/strong&gt;: Services organized around business capabilities&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Decentralized Data&lt;/strong&gt;: Each service typically manages its own data&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Smart Endpoints, Dumb Pipes&lt;/strong&gt;: Logic in services, simple communication channels&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;technical-implementation-7&#34;&gt;&#xA;  Technical Implementation&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#technical-implementation-7&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;Service Discovery&lt;/strong&gt;: Mechanisms for services to find each other&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;API Gateways&lt;/strong&gt;: Single entry point for clients&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Circuit Breakers&lt;/strong&gt;: Prevent cascading failures&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Event-Driven Communication&lt;/strong&gt;: Often uses message queues for asynchronous communication&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;real-world-examples-7&#34;&gt;&#xA;  Real-World Examples&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#real-world-examples-7&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;E-commerce Platforms&lt;/strong&gt;: Amazon&amp;rsquo;s service-oriented architecture&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Streaming Services&lt;/strong&gt;: Netflix microservices (700+ services)&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Financial Systems&lt;/strong&gt;: PayPal&amp;rsquo;s payment processing platform&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Transportation&lt;/strong&gt;: Uber&amp;rsquo;s ride-sharing platform&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>Microservices</title>
      <link>http://localhost:1313/docs/lecture-resources/lecture-1/ms/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/docs/lecture-resources/lecture-1/ms/</guid>
      <description>&lt;h1 id=&#34;microservices-architecture&#34;&gt;&#xA;  Microservices Architecture&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#microservices-architecture&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;h2 id=&#34;definition-and-core-concepts&#34;&gt;&#xA;  Definition and Core Concepts&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#definition-and-core-concepts&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;Microservices is an architectural approach where an application is structured as a &lt;strong&gt;collection of small, loosely coupled services&lt;/strong&gt;, each:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Focused on a specific business capability&lt;/li&gt;&#xA;&lt;li&gt;Independently deployable&lt;/li&gt;&#xA;&lt;li&gt;Communicating through well-defined APIs&lt;/li&gt;&#xA;&lt;li&gt;Owned by small teams&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;This architecture stands in contrast to the traditional monolithic approach where all functionality exists in a single, tightly integrated application.&lt;/p&gt;&#xA;&lt;h3 id=&#34;architecture&#34;&gt;&#xA;  Architecture&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#architecture&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê&#xA;‚îÇ                                                                 ‚îÇ&#xA;‚îÇ                        API GATEWAY                              ‚îÇ&#xA;‚îÇ                                                                 ‚îÇ&#xA;‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò&#xA;        ‚îÇ             ‚îÇ                ‚îÇ               ‚îÇ&#xA;        ‚ñº             ‚ñº                ‚ñº               ‚ñº&#xA;‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê  ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê  ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê  ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê&#xA;‚îÇ           ‚îÇ  ‚îÇ             ‚îÇ  ‚îÇ            ‚îÇ  ‚îÇ            ‚îÇ&#xA;‚îÇ    USER   ‚îÇ  ‚îÇ  PRODUCT    ‚îÇ  ‚îÇ   ORDER    ‚îÇ  ‚îÇ  PAYMENT   ‚îÇ&#xA;‚îÇ  SERVICE  ‚îÇ  ‚îÇ  SERVICE    ‚îÇ  ‚îÇ  SERVICE   ‚îÇ  ‚îÇ  SERVICE   ‚îÇ&#xA;‚îÇ           ‚îÇ  ‚îÇ             ‚îÇ  ‚îÇ            ‚îÇ  ‚îÇ            ‚îÇ&#xA;‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò  ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò  ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò  ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò&#xA;      ‚îÇ               ‚îÇ               ‚îÇ               ‚îÇ&#xA;      ‚ñº               ‚ñº               ‚ñº               ‚ñº&#xA;‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê    ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê     ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê     ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê&#xA;‚îÇ  USER   ‚îÇ    ‚îÇ PRODUCT ‚îÇ     ‚îÇ  ORDER  ‚îÇ     ‚îÇ PAYMENT ‚îÇ&#xA;‚îÇ   DB    ‚îÇ    ‚îÇ   DB    ‚îÇ     ‚îÇ   DB    ‚îÇ     ‚îÇ   DB    ‚îÇ&#xA;‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò    ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò     ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò     ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;-real-world-example-food-delivery-platform&#34;&gt;&#xA;  ÔøΩ Real-World Example: Food Delivery Platform&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#-real-world-example-food-delivery-platform&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;Imagine a food delivery platform like Uber Eats or Foodpanda. In a microservices architecture, this system would be decomposed into specialized services:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Proxy Fundamentals</title>
      <link>http://localhost:1313/docs/lecture-resources/lecture-2/proxy/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/docs/lecture-resources/lecture-2/proxy/</guid>
      <description>&lt;h1 id=&#34;-proxies-in-distributed-systems&#34;&gt;&#xA;  üîÑ Proxies in Distributed Systems&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#-proxies-in-distributed-systems&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;h2 id=&#34;-introduction&#34;&gt;&#xA;  üß≠ Introduction&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#-introduction&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;Modern distributed systems rely on &lt;strong&gt;proxies&lt;/strong&gt; to manage complexity, enhance security, and improve performance. In microservice architectures, proxies play a crucial role in &lt;strong&gt;service discovery&lt;/strong&gt;, &lt;strong&gt;load balancing&lt;/strong&gt;, and &lt;strong&gt;API gateway&lt;/strong&gt; functionality.&lt;/p&gt;&#xA;&lt;p&gt;A proxy serves as an intermediary that sits between clients and servers, intercepting and potentially modifying the communication between them. This pattern enables numerous architectural benefits that we&amp;rsquo;ll explore in this lecture.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Reverse Proxy Implementation</title>
      <link>http://localhost:1313/docs/lecture-resources/lecture-2/reverse-proxy/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/docs/lecture-resources/lecture-2/reverse-proxy/</guid>
      <description>&lt;h1 id=&#34;-reverse-proxies-in-microservices&#34;&gt;&#xA;  üîÄ Reverse Proxies in Microservices&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#-reverse-proxies-in-microservices&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;h2 id=&#34;-forward-proxy-vs-reverse-proxy&#34;&gt;&#xA;  üîç Forward Proxy vs Reverse Proxy&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#-forward-proxy-vs-reverse-proxy&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;Feature&lt;/th&gt;&#xA;          &lt;th&gt;Forward Proxy&lt;/th&gt;&#xA;          &lt;th&gt;Reverse Proxy&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;Position&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;Between client and internet&lt;/td&gt;&#xA;          &lt;td&gt;Between internet and backend servers&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;Client Awareness&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;Configured in client&lt;/td&gt;&#xA;          &lt;td&gt;Transparent to client&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;Used For&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;Anonymity, content filtering, caching&lt;/td&gt;&#xA;          &lt;td&gt;Load balancing, SSL, routing, caching&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;Hides&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;Client&lt;/td&gt;&#xA;          &lt;td&gt;Server&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;Example Tools&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;Squid, TinyProxy&lt;/td&gt;&#xA;          &lt;td&gt;Nginx, HAProxy, Apache HTTPD&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;-what-is-a-reverse-proxy&#34;&gt;&#xA;  üîÑ What is a Reverse Proxy?&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#-what-is-a-reverse-proxy&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;A &lt;strong&gt;reverse proxy&lt;/strong&gt; sits in front of one or more backend servers, intercepting requests from clients before they reach the servers. Unlike a forward proxy that acts on behalf of clients, a reverse proxy acts on behalf of servers.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Docker</title>
      <link>http://localhost:1313/docs/lecture-resources/lecture-3/docker/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/docs/lecture-resources/lecture-3/docker/</guid>
      <description>&lt;h1 id=&#34;-docker-demystified-a-deep-dive-into-modern-application-delivery&#34;&gt;&#xA;  üê≥ Docker Demystified: A Deep Dive into Modern Application Delivery&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#-docker-demystified-a-deep-dive-into-modern-application-delivery&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;h2 id=&#34;-table-of-contents&#34;&gt;&#xA;  üìö Table of Contents&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#-table-of-contents&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#what-is-docker&#34;&gt;What is Docker?&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#evolution-of-docker-from-linux-kernel-to-container-revolution&#34;&gt;Evolution of Docker: From Linux Kernel to Container Revolution&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#containers-images-and-registries&#34;&gt;Containers, Images, and Registries&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#why-docker-matters-in-the-software-development-life-cycle-sdlc&#34;&gt;Why Docker Matters in the Software Development Life Cycle (SDLC)&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#docker-vs-virtual-machines-a-technical-comparison&#34;&gt;Docker vs Virtual Machines: A Technical Comparison&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#how-docker-uses-the-os-kernel-namespaces--cgroups&#34;&gt;How Docker Uses the OS Kernel: Namespaces &amp;amp; cgroups&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#user-space-vs-kernel-space-in-docker&#34;&gt;User Space vs Kernel Space in Docker&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#writing-a-simple-dockerfile&#34;&gt;Writing a Simple Dockerfile&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;#conclusion&#34;&gt;Conclusion&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;-what-is-docker&#34;&gt;&#xA;  üê≥ What is Docker?&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#-what-is-docker&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;&lt;strong&gt;Docker&lt;/strong&gt; is a platform for developing, shipping, and running applications inside lightweight containers. It ensures your software runs reliably when moved from one environment to another‚Äîbe it from a developer‚Äôs laptop to testing, staging, or production environments.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Docker Hands-On Lab</title>
      <link>http://localhost:1313/docs/lecture-resources/lecture-3/docker-lab/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/docs/lecture-resources/lecture-3/docker-lab/</guid>
      <description>&lt;h1 id=&#34;docker-hands-on-lab&#34;&gt;&#xA;  Docker Hands-On Lab&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#docker-hands-on-lab&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;p&gt;This lab provides practical exercises to reinforce the Docker concepts covered in the lecture. These hands-on activities will help you build confidence in using Docker for development and deployment scenarios.&lt;/p&gt;&#xA;&lt;h2 id=&#34;prerequisites&#34;&gt;&#xA;  Prerequisites&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#prerequisites&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Docker Engine installed on your system&lt;/li&gt;&#xA;&lt;li&gt;Basic command line familiarity&lt;/li&gt;&#xA;&lt;li&gt;Text editor of your choice&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;exercise-1-getting-started-with-docker&#34;&gt;&#xA;  Exercise 1: Getting Started with Docker&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#exercise-1-getting-started-with-docker&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;11-verify-docker-installation&#34;&gt;&#xA;  1.1 Verify Docker Installation&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#11-verify-docker-installation&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;p&gt;Ensure Docker is properly installed on your system:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Docker Lab with Go</title>
      <link>http://localhost:1313/docs/lecture-resources/lecture-3/docker-lab-go/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/docs/lecture-resources/lecture-3/docker-lab-go/</guid>
      <description>&lt;h1 id=&#34;docker-hands-on-lab-with-go&#34;&gt;&#xA;  Docker Hands-On Lab with Go&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#docker-hands-on-lab-with-go&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;p&gt;This lab provides practical exercises using Go to reinforce the Docker concepts covered in the lecture.&lt;/p&gt;&#xA;&lt;h2 id=&#34;prerequisites&#34;&gt;&#xA;  Prerequisites&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#prerequisites&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Docker Engine installed on your system&lt;/li&gt;&#xA;&lt;li&gt;Basic command line familiarity&lt;/li&gt;&#xA;&lt;li&gt;Text editor of your choice&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;exercise-1-getting-started-with-docker&#34;&gt;&#xA;  Exercise 1: Getting Started with Docker&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#exercise-1-getting-started-with-docker&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;11-verify-docker-installation&#34;&gt;&#xA;  1.1 Verify Docker Installation&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#11-verify-docker-installation&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;p&gt;Ensure Docker is properly installed on your system:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;docker --version&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;docker info&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;12-running-your-first-container&#34;&gt;&#xA;  1.2 Running Your First Container&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#12-running-your-first-container&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;p&gt;Let&amp;rsquo;s run an interactive container using the official Alpine image:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Docker Command Cheat Sheet</title>
      <link>http://localhost:1313/docs/lecture-resources/lecture-3/docker-cheatsheet/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/docs/lecture-resources/lecture-3/docker-cheatsheet/</guid>
      <description>&lt;h1 id=&#34;docker-command-cheat-sheet&#34;&gt;&#xA;  Docker Command Cheat Sheet&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#docker-command-cheat-sheet&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;p&gt;This cheat sheet provides a quick reference for commonly used Docker commands.&lt;/p&gt;&#xA;&lt;h2 id=&#34;docker-system-commands&#34;&gt;&#xA;  Docker System Commands&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#docker-system-commands&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;Command&lt;/th&gt;&#xA;          &lt;th&gt;Description&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;docker version&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;Display Docker version information&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;docker info&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;Display system-wide information&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;docker system prune&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;Remove all unused containers, networks, images, and build cache&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;docker system df&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;Show Docker disk usage&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;h2 id=&#34;docker-image-commands&#34;&gt;&#xA;  Docker Image Commands&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#docker-image-commands&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;Command&lt;/th&gt;&#xA;          &lt;th&gt;Description&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;docker images&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;List all images&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;docker pull &amp;lt;image-name&amp;gt;&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;Pull an image from registry&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;docker build -t &amp;lt;name:tag&amp;gt; &amp;lt;path&amp;gt;&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;Build an image from Dockerfile&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;docker rmi &amp;lt;image-id&amp;gt;&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;Remove an image&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;docker image prune&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;Remove unused images&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;docker tag &amp;lt;source-image&amp;gt; &amp;lt;target-image&amp;gt;&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;Create a tag for image&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;docker history &amp;lt;image-name&amp;gt;&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;Show history of an image&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;docker save -o &amp;lt;file.tar&amp;gt; &amp;lt;image-name&amp;gt;&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;Save image to a tar archive&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;docker load -i &amp;lt;file.tar&amp;gt;&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;Load image from a tar archive&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;docker inspect &amp;lt;image-id&amp;gt;&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;Display detailed information about an image&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;h2 id=&#34;docker-container-commands&#34;&gt;&#xA;  Docker Container Commands&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#docker-container-commands&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;Command&lt;/th&gt;&#xA;          &lt;th&gt;Description&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;docker ps&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;List running containers&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;docker ps -a&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;List all containers (including stopped)&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;docker run &amp;lt;image-name&amp;gt;&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;Run a container&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;docker run -it &amp;lt;image-name&amp;gt; &amp;lt;command&amp;gt;&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;Run container interactively&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;docker run -d &amp;lt;image-name&amp;gt;&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;Run container in detached mode&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;docker run -p &amp;lt;host-port&amp;gt;:&amp;lt;container-port&amp;gt; &amp;lt;image-name&amp;gt;&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;Run container with port mapping&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;docker run -v &amp;lt;host-path&amp;gt;:&amp;lt;container-path&amp;gt; &amp;lt;image-name&amp;gt;&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;Run container with volume mount&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;docker run --name &amp;lt;container-name&amp;gt; &amp;lt;image-name&amp;gt;&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;Run container with a specific name&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;docker run --rm &amp;lt;image-name&amp;gt;&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;Run container and remove it when it exits&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;docker stop &amp;lt;container-id&amp;gt;&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;Stop a running container&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;docker start &amp;lt;container-id&amp;gt;&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;Start a stopped container&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;docker restart &amp;lt;container-id&amp;gt;&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;Restart a container&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;docker rm &amp;lt;container-id&amp;gt;&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;Remove a container&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;docker rm -f &amp;lt;container-id&amp;gt;&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;Force remove a running container&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;docker exec -it &amp;lt;container-id&amp;gt; &amp;lt;command&amp;gt;&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;Execute a command in a running container&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;docker logs &amp;lt;container-id&amp;gt;&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;Fetch the logs of a container&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;docker logs -f &amp;lt;container-id&amp;gt;&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;Follow log output of a container&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;docker cp &amp;lt;container-id&amp;gt;:&amp;lt;container-path&amp;gt; &amp;lt;host-path&amp;gt;&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;Copy files from container to host&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;docker cp &amp;lt;host-path&amp;gt; &amp;lt;container-id&amp;gt;:&amp;lt;container-path&amp;gt;&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;Copy files from host to container&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;docker stats&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;Display live container resource usage&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;docker inspect &amp;lt;container-id&amp;gt;&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;Display detailed information about a container&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;docker top &amp;lt;container-id&amp;gt;&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;Display the running processes of a container&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;docker update --memory &amp;lt;limit&amp;gt; &amp;lt;container-id&amp;gt;&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;Update container resources&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;h2 id=&#34;docker-network-commands&#34;&gt;&#xA;  Docker Network Commands&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#docker-network-commands&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;Command&lt;/th&gt;&#xA;          &lt;th&gt;Description&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;docker network ls&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;List all networks&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;docker network create &amp;lt;network-name&amp;gt;&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;Create a network&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;docker network rm &amp;lt;network-name&amp;gt;&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;Remove a network&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;docker network inspect &amp;lt;network-name&amp;gt;&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;Display detailed information about a network&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;docker network connect &amp;lt;network-name&amp;gt; &amp;lt;container-id&amp;gt;&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;Connect a container to a network&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;docker network disconnect &amp;lt;network-name&amp;gt; &amp;lt;container-id&amp;gt;&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;Disconnect a container from a network&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;docker network prune&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;Remove all unused networks&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;h2 id=&#34;docker-volume-commands&#34;&gt;&#xA;  Docker Volume Commands&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#docker-volume-commands&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;Command&lt;/th&gt;&#xA;          &lt;th&gt;Description&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;docker volume ls&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;List all volumes&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;docker volume create &amp;lt;volume-name&amp;gt;&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;Create a volume&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;docker volume rm &amp;lt;volume-name&amp;gt;&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;Remove a volume&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;docker volume inspect &amp;lt;volume-name&amp;gt;&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;Display detailed information about a volume&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;docker volume prune&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;Remove all unused volumes&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;h2 id=&#34;dockerfile-instructions&#34;&gt;&#xA;  Dockerfile Instructions&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#dockerfile-instructions&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;Instruction&lt;/th&gt;&#xA;          &lt;th&gt;Description&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;FROM&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;Set base image&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;WORKDIR&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;Set working directory&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;COPY&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;Copy files from host to container&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;ADD&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;Copy files from host or URL to container&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;RUN&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;Execute command during build&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;ENV&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;Set environment variable&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;ARG&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;Define build-time variable&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;EXPOSE&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;Expose port&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;VOLUME&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;Create mount point&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;CMD&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;Default command for container&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;ENTRYPOINT&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;Configure container executable&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;LABEL&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;Add metadata to image&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;USER&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;Set user for container&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;HEALTHCHECK&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;Check container health&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;h2 id=&#34;common-docker-run-options&#34;&gt;&#xA;  Common Docker Run Options&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#common-docker-run-options&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;Option&lt;/th&gt;&#xA;          &lt;th&gt;Description&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;-d, --detach&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;Run container in background&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;-e, --env&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;Set environment variables&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;-p, --publish&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;Publish container&amp;rsquo;s port to the host&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;-v, --volume&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;Bind mount a volume&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;--name&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;Assign a name to the container&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;--network&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;Connect to a network&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;--restart&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;Restart policy (no, on-failure, always, unless-stopped)&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;--rm&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;Remove container when it exits&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;-it&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;Interactive mode with TTY&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;--memory&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;Memory limit&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;code&gt;--cpus&lt;/code&gt;&lt;/td&gt;&#xA;          &lt;td&gt;Number of CPUs&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;h2 id=&#34;docker-command-examples&#34;&gt;&#xA;  Docker Command Examples&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#docker-command-examples&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;running-a-nginx-web-server&#34;&gt;&#xA;  Running a Nginx Web Server&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#running-a-nginx-web-server&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;docker run -d -p 8080:80 --name my-nginx nginx&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;building-a-custom-image&#34;&gt;&#xA;  Building a Custom Image&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#building-a-custom-image&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;docker build -t my-app:1.0 .&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;running-a-container-with-environment-variables&#34;&gt;&#xA;  Running a Container with Environment Variables&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#running-a-container-with-environment-variables&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;docker run -d -p 3000:3000 -e NODE_ENV&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;production --name my-node-app my-node-app&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;creating-a-docker-network-and-connecting-containers&#34;&gt;&#xA;  Creating a Docker Network and Connecting Containers&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#creating-a-docker-network-and-connecting-containers&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;docker network create my-network&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;docker run -d --name db --network my-network mongo&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;docker run -d --name app --network my-network -p 8000:8000 my-app&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;volume-mounting-for-persistence&#34;&gt;&#xA;  Volume Mounting for Persistence&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#volume-mounting-for-persistence&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;docker run -d -p 27017:27017 -v mongodb-data:/data/db --name mongodb mongo&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;running-a-mysql-container-with-environment-variables&#34;&gt;&#xA;  Running a MySQL Container with Environment Variables&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#running-a-mysql-container-with-environment-variables&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;docker run -d -p 3306:3306 &lt;span style=&#34;color:#ae81ff&#34;&gt;\&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;  -e MYSQL_ROOT_PASSWORD&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;secretpassword &lt;span style=&#34;color:#ae81ff&#34;&gt;\&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;  -e MYSQL_DATABASE&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;mydb &lt;span style=&#34;color:#ae81ff&#34;&gt;\&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;  -e MYSQL_USER&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;user &lt;span style=&#34;color:#ae81ff&#34;&gt;\&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;  -e MYSQL_PASSWORD&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;password &lt;span style=&#34;color:#ae81ff&#34;&gt;\&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;  -v mysql-data:/var/lib/mysql &lt;span style=&#34;color:#ae81ff&#34;&gt;\&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;  --name mysql &lt;span style=&#34;color:#ae81ff&#34;&gt;\&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;  mysql:8.0&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>Docker Best Practices</title>
      <link>http://localhost:1313/docs/lecture-resources/lecture-3/docker-best-practices/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/docs/lecture-resources/lecture-3/docker-best-practices/</guid>
      <description>&lt;h1 id=&#34;docker-best-practices&#34;&gt;&#xA;  Docker Best Practices&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#docker-best-practices&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;p&gt;This document outlines recommended practices for effectively developing, deploying, and managing Docker containers in production environments.&lt;/p&gt;&#xA;&lt;h2 id=&#34;image-building-best-practices&#34;&gt;&#xA;  Image Building Best Practices&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#image-building-best-practices&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;use-specific-base-image-tags&#34;&gt;&#xA;  Use Specific Base Image Tags&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#use-specific-base-image-tags&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;p&gt;Always use specific version tags for base images rather than &lt;code&gt;latest&lt;/code&gt; to ensure consistency and reproducibility.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-dockerfile&#34; data-lang=&#34;dockerfile&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Bad practice&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; node:latest&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Good practice&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; node:18.16.0-slim&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;keep-images-small&#34;&gt;&#xA;  Keep Images Small&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#keep-images-small&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Use lightweight base images (Alpine, slim variants)&lt;/li&gt;&#xA;&lt;li&gt;Minimize layers by combining related commands&lt;/li&gt;&#xA;&lt;li&gt;Remove unnecessary files in the same layer they were created&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-dockerfile&#34; data-lang=&#34;dockerfile&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Bad practice&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; ubuntu:22.04&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;RUN&lt;/span&gt; apt-get update&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;RUN&lt;/span&gt; apt-get install -y python3&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;RUN&lt;/span&gt; apt-get install -y python3-pip&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;RUN&lt;/span&gt; pip install requests&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Good practice&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; python:3.11-alpine&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;RUN&lt;/span&gt; pip install --no-cache-dir requests&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;use-multi-stage-builds&#34;&gt;&#xA;  Use Multi-Stage Builds&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#use-multi-stage-builds&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;p&gt;Use multi-stage builds to separate build-time dependencies from runtime dependencies, resulting in smaller final images.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Docker Swarm</title>
      <link>http://localhost:1313/docs/lecture-resources/lecture-4/docker-swarm/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/docs/lecture-resources/lecture-4/docker-swarm/</guid>
      <description>&lt;h1 id=&#34;-docker-swarm-container-orchestration-made-simple&#34;&gt;&#xA;  üê≥ Docker Swarm: Container Orchestration Made Simple&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#-docker-swarm-container-orchestration-made-simple&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;h2 id=&#34;-why-do-we-need-a-container-orchestrator&#34;&gt;&#xA;  üåê Why Do We Need a Container Orchestrator?&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#-why-do-we-need-a-container-orchestrator&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;While Docker allows us to package and run applications in containers, managing those containers at scale‚Äîespecially in production‚Äîrequires much more. That&amp;rsquo;s where container orchestrators like Docker Swarm or Kubernetes come in.&lt;/p&gt;&#xA;&lt;p&gt;All the limitations of standalone Docker containers discussed previously are solved by introducing a Container Orchestrator:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;‚úÖ &lt;strong&gt;High Availability&lt;/strong&gt;: No single point of failure&lt;/li&gt;&#xA;&lt;li&gt;‚úÖ &lt;strong&gt;Auto-scaling&lt;/strong&gt;: Adjust to changing workloads&lt;/li&gt;&#xA;&lt;li&gt;‚úÖ &lt;strong&gt;Load Balancing&lt;/strong&gt;: Distribute traffic efficiently&lt;/li&gt;&#xA;&lt;li&gt;‚úÖ &lt;strong&gt;Service Discovery&lt;/strong&gt;: Containers can find each other&lt;/li&gt;&#xA;&lt;li&gt;‚úÖ &lt;strong&gt;Rolling Updates&lt;/strong&gt;: Zero-downtime deployments&lt;/li&gt;&#xA;&lt;li&gt;‚úÖ &lt;strong&gt;Health Monitoring&lt;/strong&gt;: Automatic recovery from failures&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;-docker-swarm-architecture&#34;&gt;&#xA;  üìä Docker Swarm Architecture&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#-docker-swarm-architecture&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;single-manager-architecture&#34;&gt;&#xA;  Single Manager Architecture&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#single-manager-architecture&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;p&gt;&lt;img src=&#34;http://localhost:1313/images/ds-1.png&#34; alt=&#34;Docker Swarm with one manager&#34; /&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Docker Swarm Concepts</title>
      <link>http://localhost:1313/docs/lecture-resources/lecture-4/docker-swarm-concepts/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/docs/lecture-resources/lecture-4/docker-swarm-concepts/</guid>
      <description>&lt;h1 id=&#34;-deploying-applications-on-docker-swarm&#34;&gt;&#xA;  üöÄ Deploying Applications on Docker Swarm&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#-deploying-applications-on-docker-swarm&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;p&gt;Docker Swarm is a native container orchestration tool that allows you to deploy and manage containerized applications across a cluster of Docker nodes with ease. Understanding the core concepts helps you grasp how your application runs inside the Swarm.&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;http://localhost:1313/images/services-diagram.webp&#34; alt=&#34;Docker Swarm Service&#34; /&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;em&gt;Source: &lt;a href=&#34;https://docs.docker.com/engine/swarm/how-swarm-mode-works/services/&#34;&gt;Docker Documentation&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;-core-concepts&#34;&gt;&#xA;  üì¶ Core Concepts&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#-core-concepts&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;Docker Swarm operates with four key hierarchical components:&lt;/p&gt;&#xA;&lt;h3 id=&#34;1-container&#34;&gt;&#xA;  1. Container&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#1-container&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;The actual running instance of your application image&lt;/li&gt;&#xA;&lt;li&gt;Similar to a pod container in Kubernetes&lt;/li&gt;&#xA;&lt;li&gt;Executes the application code and its dependencies&lt;/li&gt;&#xA;&lt;li&gt;Isolated from other containers but shares the host OS kernel&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;2-task&#34;&gt;&#xA;  2. Task&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#2-task&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;A Swarm-managed unit of work that runs exactly one container&lt;/li&gt;&#xA;&lt;li&gt;The atomic scheduling unit in Swarm&lt;/li&gt;&#xA;&lt;li&gt;Has a lifecycle: assigned ‚Üí prepared ‚Üí running ‚Üí complete (or failed)&lt;/li&gt;&#xA;&lt;li&gt;If a task fails, the scheduler creates a new task to maintain the desired state&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;3-service&#34;&gt;&#xA;  3. Service&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#3-service&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;A declarative definition of an application running in the Swarm&lt;/li&gt;&#xA;&lt;li&gt;Specifies how many copies (tasks) of a container to run&lt;/li&gt;&#xA;&lt;li&gt;Defines the container image, ports, networks, volumes, and resource constraints&lt;/li&gt;&#xA;&lt;li&gt;Two service modes:&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;Replicated&lt;/strong&gt;: Run a specified number of replicas across the cluster&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Global&lt;/strong&gt;: Run one task on every node in the cluster&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;4-stack&#34;&gt;&#xA;  4. Stack&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#4-stack&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;A collection of related services deployed together&lt;/li&gt;&#xA;&lt;li&gt;Defined by a single Docker Compose file&lt;/li&gt;&#xA;&lt;li&gt;Simplifies managing multiple services as a single unit&lt;/li&gt;&#xA;&lt;li&gt;Includes networks and volumes required by the services&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;-service-deployment-workflow&#34;&gt;&#xA;  üîÑ Service Deployment Workflow&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#-service-deployment-workflow&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;When you deploy a service to Docker Swarm, the following happens:&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
