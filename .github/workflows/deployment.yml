name: Deploy Hugo Site to s3 and CloudFront

on:
  push:
    branches: 
      - main
  workflow_dispatch:

permissions:
  contents: read
  id-token: write

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: true  # Fetch Hugo themes (true OR recursive)
          fetch-depth: 0    # Fetch all history for .GitInfo and .Lastmod

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/${{ secrets.AWS_ROLE_NAME }}
          aws-region: ${{ secrets.AWS_REGION }}
          role-session-name: GitHubActionsSession

      - name: Setup Hugo
        uses: peaceiris/actions-hugo@v2
        with:
          hugo-version: 'latest'
          extended: true

      - name: Cache Hugo modules
        uses: actions/cache@v3
        with:
          path: /tmp/hugo_cache
          key: ${{ runner.os }}-hugo-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-hugo-

      - name: Build Hugo site
        run: hugo --minify
        env:
          HUGO_ENV: production

      - name: Deploy to S3
        run: |
          aws s3 sync public/ s3://${{ secrets.AWS_BUCKET_NAME }} \
            --delete \
            --region ${{ secrets.AWS_REGION }} \
            --cache-control "max-age=31536000, public" \
            --exclude "*.html" \
            --exclude "*page-data.json" \
            --exclude "*app-data.json"

      - name: Deploy HTML files to S3
        run: |
          aws s3 sync public/ s3://${{ secrets.AWS_BUCKET_NAME }} \
            --delete \
            --region ${{ secrets.AWS_REGION }} \
            --cache-control "max-age=0, no-cache, no-store, must-revalidate" \
            --content-type "text/html; charset=utf-8" \
            --exclude "*" \
            --include "*.html"

      - name: Invalidate CloudFront
        run: |
          aws cloudfront create-invalidation \
            --distribution-id ${{ secrets.AWS_DISTRIBUTION_ID }} \
            --paths "/*" \
            --region ${{ secrets.AWS_REGION }}
